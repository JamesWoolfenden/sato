package see

import (
	"fmt"
	"strings"
)

type missingResourceError struct {
	Resource string
}

func (e *missingResourceError) Error() string {
	return fmt.Sprintf("resource %s not found", e.Resource)
}

// Lookup converts from cloudformation/ARM to terraform resource name.
func Lookup(resource string, reverse bool) (*string, error) {
	var result string

	//goland:noinspection GoLinter
	Lookup := map[string]string{
		"alexa-ask-skill":                                         "",
		"aws::accessanalyzer::analyzer":                           "aws_accessanalyzer_analyzer",
		"aws::acmpca::certificate":                                "aws_acmpca_certificate",
		"aws::acmpca::certificateauthority":                       "aws_acmpca_certificate_authority",
		"aws::acmpca::certificateauthorityactivation":             "",
		"aws::acmpca::permission":                                 "aws_acmpca_permission",
		"aws::amazonmq::broker":                                   "aws_mq_broker",
		"aws::amazonmq::configuration":                            "aws_mq_configuration",
		"aws::amazonmq::configurationassociation":                 "aws_mq_broker",
		"aws::amplify::app":                                       "aws_amplify_app",
		"aws::amplify::branch":                                    "aws_amplify_branch",
		"aws::amplify::domain":                                    "aws_amplify_domain",
		"aws::amplifyuibuilder::Component":                        "",
		"aws::amplifyuibuilder::Form":                             "",
		"aws::amplifyuibuilder::Theme":                            "",
		"aws::apigateway::account":                                "aws_api_gateway_account",
		"aws::apigateway::apikey":                                 "aws_api_gateway_api_key",
		"aws::apigateway::authorizer":                             "aws_api_gateway_authorizer",
		"aws::apigateway::basepathmapping":                        "aws_api_gateway_base_path_mapping",
		"aws::apigateway::clientcertificate":                      "aws_api_gateway_client_certificate",
		"aws::apigateway::deployment":                             "aws_api_gateway_deployment",
		"aws::apigateway::documentationpart":                      "aws_api_gateway_documentation_part",
		"aws::apigateway::documentationversion":                   "aws_api_gateway_documentation_version",
		"aws::apigateway::domainname":                             "aws_api_gateway_domain_name",
		"aws::apigateway::gatewayresponse":                        "aws_api_gateway_gateway_response",
		"aws::apigateway::method":                                 "aws_api_gateway_method",
		"aws::apigateway::model":                                  "aws_api_gateway_model",
		"aws::apigateway::requestvalidator":                       "aws_api_gateway_request_validator",
		"aws::apigateway::resource":                               "aws_api_gateway_resource",
		"aws::apigateway::restapi":                                "aws_api_gateway_rest_api",
		"aws::apigateway::stage":                                  "aws_api_gateway_stage",
		"aws::apigateway::stagekey":                               "",
		"aws::apigateway::usageplan":                              "aws_api_gateway_usage_plan",
		"aws::apigateway::usageplankey":                           "aws_api_gateway_usage_plan_key",
		"aws::apigateway::vpclink":                                "aws_api_gateway_vpc_link",
		"aws::apigatewayv2::api":                                  "aws_apigatewayv2_api",
		"aws::apigatewayv2::apigatewaymanagedoverrides":           "",
		"aws::apigatewayv2::apimapping":                           "aws_apigatewayv2_api_mapping",
		"aws::apigatewayv2::authorizer":                           "aws_apigatewayv2_authorizer",
		"aws::apigatewayv2::deployment":                           "aws_apigatewayv2_deployment",
		"aws::apigatewayv2::domainname":                           "aws_apigatewayv2_domain_name",
		"aws::apigatewayv2::integration":                          "aws_apigatewayv2_integration",
		"aws::apigatewayv2::integrationresponse":                  "aws_apigatewayv2_integration_response",
		"aws::apigatewayv2::model":                                "aws_apigatewayv2_model",
		"aws::apigatewayv2::route":                                "aws_apigatewayv2_route",
		"aws::apigatewayv2::routeresponse":                        "aws_apigatewayv2_route_response",
		"aws::apigatewayv2::stage":                                "aws_apigatewayv2_stage",
		"aws::apigatewayv2::vpclink":                              "aws_apigatewayv2_vpc_link",
		"aws::appconfig::application":                             "aws_appconfig_application",
		"aws::appconfig::configurationprofile":                    "aws_appconfig_configuration_profile",
		"aws::appconfig::deployment":                              "aws_appconfig_deployment",
		"aws::appconfig::deploymentstrategy":                      "aws_appconfig_deployment_strategy",
		"aws::appconfig::environment":                             "aws_appconfig_environment",
		"aws::appconfig::extension":                               "aws_appconfig_extension",
		"aws::appconfig::extensionassociation":                    "aws_appconfig_extension_association",
		"aws::appconfig::hostedconfigurationversion":              "aws_appconfig_hosted_configuration_version",
		"aws::appflow::connector":                                 "",
		"aws::appflow::connectorprofile":                          "aws_appflow_connector_profile",
		"aws::appflow::flow":                                      "aws_appflow_flow",
		"aws::appintegrations::application":                       "",
		"aws::appintegrations::dataintegration":                   "aws_appintegrations_data_integration",
		"aws::appintegrations::eventintegration":                  "aws_appintegrations_event_integration",
		"aws::applicationautoscaling::scalabletarget":             "aws_appautoscaling_target",
		"aws::applicationautoscaling::scalingpolicy":              "aws_appAutoscaling_policy",
		"aws::appmesh::gatewayroute":                              "aws_appmesh_gateway_route",
		"aws::appmesh::mesh":                                      "aws_appmesh_mesh",
		"aws::appmesh::route":                                     "aws_appmesh_route",
		"aws::appmesh::virtualnode":                               "aws_appmesh_virtual_node",
		"aws::appmesh::virtualrouter":                             "aws_appmesh_virtual_router",
		"aws::appmesh::virtualservice":                            "aws_appmesh_virtual_service",
		"aws::apprunner::autoscalingconfiguration":                "aws_apprunner_auto_scaling_configuration_version",
		"aws::apprunner::observabilityconfiguration":              "aws_apprunner_observability_configuration",
		"aws::apprunner::service":                                 "aws_apprunner_service",
		"aws::apprunner::vpcconnector":                            "aws_apprunner_vpc_connector",
		"aws::apprunner::vpcingressconnection":                    "aws_apprunner_vpc_ingress_connection",
		"aws::appstream::appblock":                                "",
		"aws::appstream::appblockbuilder":                         "",
		"aws::appstream::application":                             "",
		"aws::appstream::applicationentitlementassociation":       "",
		"aws::appstream::applicationfleetassociation":             "",
		"aws::appstream::directoryconfig":                         "",
		"aws::appstream::entitlement":                             "",
		"aws::appstream::fleet":                                   "aws_appstream_fleet",
		"aws::appstream::imagebuilder":                            "aws_appstream_image_builder",
		"aws::appstream::stack":                                   "aws_appstream_stack",
		"aws::appstream::stackfleetassociation":                   "aws_appstream_fleet_stack_association",
		"aws::appstream::stackuserassociation":                    "aws_appstream_user_stack_association",
		"aws::appstream::user":                                    "aws_appstream_user",
		"aws::appsync::apicache":                                  "aws_appsync_api_cache",
		"aws::appsync::apikey":                                    "aws_appsync_api_key",
		"aws::appsync::datasource":                                "aws_appsync_datasource",
		"aws::appsync::domainname":                                "aws_appsync_domain_name",
		"aws::appsync::domainnameapiassociation":                  "aws_appsync_domain_name_api_association",
		"aws::appsync::graphqlapi":                                "aws_appsync_graphql_api",
		"aws::appsync::functionconfiguration":                     "aws_appsync_function",
		"aws::appsync::graphqlschema":                             "",
		"aws::appsync::resolver":                                  "aws_appsync_resolver",
		"aws::appsync::sourceapiassociation":                      "aws_appsync_resolver_api_association",
		"aws::apptest::testcase":                                  "",
		"aws::aps::rulegroupsnamespace":                           "",
		"aws::aps::scraper":                                       "",
		"aws::aps::workspace":                                     "",
		"aws::arczonalshift::autoshiftobservernotificationstatus": "",
		"aws::arczonalshift::zonalautoshiftconfiguration":         "",
		"aws::athena::capacityreservation":                        "",
		"aws::athena::datacatalog":                                "aws_athena_data_catalog",
		"aws::athena::namedquery":                                 "aws_athena_named_query",
		"aws::athena::preparedstatement":                          "aws_athena_prepared_statement",
		"aws::athena::workgroup":                                  "aws_athena_workgroup",
		"aws::auditmanager::assessment":                           "aws_auditmanager_assessment",
		"aws::autoscaling::autoscalinggroup":                      "aws_autoscaling_group",
		"aws::autoscaling::launchconfiguration":                   "aws_launch_configuration",
		"aws::autoscaling::lifecyclehook":                         "aws_autoscaling_lifecycle_hook",
		"aws::autoscaling::scalingpolicy":                         "aws_autoscaling_policy",
		"aws::autoscaling::scheduledaction":                       "aws_autoscaling_schedule",
		"aws::autoscaling::warmpool":                              "",
		"aws::autoscalingplans::scalingplan":                      "aws_autoscalingplans_scaling_plan",
		"aws::b2bi::capability":                                   "",
		"aws::b2bi::partnership":                                  "",
		"aws::b2bi::profile":                                      "",
		"aws::b2bi::transformer":                                  "",
		"aws::backup::backupplan":                                 "aws_backup_plan",
		"aws::backup::backupselection":                            "aws_backup_selection",
		"aws::backup::backupvault":                                "aws_backup_vault",
		"aws::backup::framework":                                  "aws_backup_framework",
		"aws::backup::reportplan":                                 "aws_backup_report_plan",
		"aws::backup::restoretestingplan":                         "",
		"aws::backup::restoretestingselection":                    "",
		"aws::backupgateway::hypervisor":                          "",
		"aws::batch::computeenvironment":                          "aws_batch_compute_environment",
		"aws::batch::jobdefinition":                               "aws_batch_job_definition",
		"aws::batch::jobqueue":                                    "aws_batch_job_queue",
		"aws::batch::schedulingpolicy":                            "aws_batch_scheduling_policy",
		"aws::bcmdataexports::export":                             "aws_bcmdataexports_export",
		"aws::bedrock::agent":                                     "aws_bedrockagent_agent",
		"aws::bedrock::agentalias":                                "aws_bedrockagent_agent_alias",
		"aws::bedrock::datasource":                                "aws_bedrockagent_data_source",
		"aws::bedrock::flow":                                      "",
		"aws::bedrock::flowalias":                                 "",
		"aws::bedrock::flowversion":                               "",
		"aws::bedrock::guardrail":                                 "",
		"aws::bedrock::guardrailversion":                          "",
		"aws::bedrock::knowledgebase":                             "aws_bedrockagent_knowledge_base",
		"aws::bedrock::prompt":                                    "",
		"aws::bedrock::promptversion":                             "",

		"aws::billingconductor::billinggroup":              "",
		"aws::billingconductor::customlineitem":            "",
		"aws::billingconductor::pricingplan":               "",
		"aws::billingconductor::pricingrule":               "",
		"aws::budgets::budget":                             "aws_budgets_budget",
		"aws::budgets::budgetsaction":                      "aws_budgets_budget_action",
		"aws::cassandra::keyspace":                         "aws_keyspaces_keyspace",
		"aws::cassandra::table":                            "aws_keyspaces_table",
		"aws::ce::anomalymonitor":                          "aws_ce_anomaly_monitor",
		"aws::ce::anomalysubscription":                     "aws_ce_anomaly_subscription",
		"aws::ce::costcategory":                            "aws_ce_cost_category",
		"aws::certificatemanager::account":                 "",
		"aws::certificatemanager::certificate":             "aws_acm_certificate",
		"aws::chatbot::microsoftteamschannelconfiguration": "aws_chatbot_teams_channel_configuration",
		"aws::chatbot::slackchannelconfiguration":          "aws_chatbot_slack_channel_configuration",
		"aws::cleanrooms::analysistemplate":                "",
		"aws::cleanrooms::collaboration":                   "aws_cleanrooms_collaboration",
		"aws::cleanrooms::configuredtable":                 "aws_cleanrooms_configured_table",
		"aws::cleanrooms::configuredtableassociation":      "",
		"aws::cleanrooms::membership":                      "",
		"aws::cleanrooms::privacybudgettemplate":           "",
		"aws::cleanroomsml::trainingdataset":               "",

		"aws::cloud9::environmentec2":                      "aws_cloud9_environment_ec2",
		"aws::cloudformation::Stack":                       "aws_cloudformation_stack",
		"aws::cloudfront::cloudFrontOriginAccessIdentity":  "aws_cloudfront_origin_access_identity",
		"aws::cloudfront::distribution":                    "aws_cloudfront_distribution",
		"aws::cloudwatch::alarm":                           "aws_cloudwatch_metric_alarm",
		"aws::cloudwatch::dashboard":                       "aws_cloudwatch_dashboard",
		"aws::codebuild::project":                          "aws_codebuild_project",
		"aws::codecommit::repository":                      "aws_codecommit_repository",
		"aws::codepipeline::pipeline":                      "aws_codepipeline",
		"aws::config::configrule":                          "aws_config_config_rule",
		"aws::config::configurationrecorder":               "aws_config_configuration_recorder",
		"aws::config::deliverychannel":                     "aws_config_delivery_channel",
		"aws::directoryservice::microsoftad":               "aws_directory_service_directory",
		"aws::dns::endpoint":                               "aws_dms_endpoint",
		"aws::dns::replicationinstance":                    "aws_dms_replication_instance",
		"aws::dns::replicationsubnetgroup":                 "aws_dms_replication_subnet_group",
		"aws::dns::replicationtask":                        "aws_dms_replication_task",
		"aws::dynamodb::table":                             "aws_dynamodb_table",
		"aws::ec2::dhcpoptions":                            "aws_vpc_dhcp_options",
		"aws::ec2::eip":                                    "aws_eip",
		"aws::ec2::eipassociation":                         "aws_eip_association",
		"aws::ec2::flowlog":                                "aws_flow_log",
		"aws::ec2::instance":                               "aws_instance",
		"aws::ec2::internetgateway":                        "aws_Internet_gateway",
		"aws::ec2::launchtemplate":                         "aws_launch_template",
		"aws::ec2::natgateway":                             "aws_nat_gateway",
		"aws::ec2::networkacl":                             "aws_network_acl",
		"aws::ec2::networkaclentry":                        "aws_network_acl_rule",
		"aws::ec2::networkinterface":                       "aws_network_interface",
		"aws::ec2::route":                                  "aws_route",
		"aws::ec2::routetable":                             "aws_route_table",
		"aws::ec2::securitygroup":                          "aws_security_group",
		"aws::ec2::securitygroupegress":                    "aws_security_group_rule_egress",
		"aws::ec2::securitygroupingress":                   "aws_security_group_rule_ingress",
		"aws::ec2::subnet":                                 "aws_subnet",
		"aws::ec2::subnetnetworkaclassociation":            "aws_network_acl_association",
		"aws::ec2::subnetroutetableassociation":            "aws_route_table_association",
		"aws::ec2::volume":                                 "aws_ebs_volume",
		"aws::ec2::vpc":                                    "aws_vpc",
		"aws::ec2::vpcdhcpoptionsassociation":              "aws_vpc_dhcp_options_association",
		"aws::ec2::vpcendpoint":                            "aws_vpc_endpoint",
		"aws::ec2::vpcgatewayattachment":                   "aws_vpn_gatewayAttachment",
		"aws::ecs::cluster":                                "aws_ecs_cluster",
		"aws::ecs::service":                                "aws_ecs_service",
		"aws::ecs::taskdefinition":                         "aws_ecs_task_definition",
		"aws::efs::filesystem":                             "aws_efs_file_system",
		"aws::efs::mounttarget":                            "aws_efs_mount_target",
		"aws::eks::cluster":                                "aws_eks_cluster",
		"aws::eks::nodegroup":                              "aws_eks_node_group",
		"aws::elasticache::parametergroup":                 "aws_elasticache_parameter_group",
		"aws::elasticache::replicationgroup":               "aws_elasticache_replication_group",
		"aws::elasticache::subnetgroup":                    "aws_elasticache_subnet_group",
		"aws::elasticloadbalancing::loadbalancer":          "aws_elb",
		"aws::elasticloadbalancingv2::listener":            "aws_lb_listener",
		"aws::elasticloadbalancingv2::listenerrule":        "aws_lb_listener_rule",
		"aws::elasticloadbalancingv2::loadbalancer":        "aws_lb",
		"aws::elasticloadbalancingv2::targetgroup":         "aws_lb_target_group",
		"aws::events::rule":                                "aws_cloudwatch_event_rule",
		"aws::iam::accessKey":                              "aws_iam_access_key",
		"aws::iam::group":                                  "aws_iam_group",
		"aws::iam::instanceprofile":                        "aws_iam_instance_profile",
		"aws::iam::managedpolicy":                          "aws_iam_managed_policy",
		"aws::iam::policy":                                 "aws_iam_policy",
		"aws::iam::role":                                   "aws_iam_role",
		"aws::iam::user":                                   "aws_iam_user",
		"aws::iam::usertogroupaddition":                    "aws_iam_group_membership",
		"aws::kms::alias":                                  "aws_kms_alias",
		"aws::kms::key":                                    "aws_kms_key",
		"aws::lambda::eventsourcemapping":                  "aws_lambda_event_source_mapping",
		"aws::lambda::function":                            "aws_lambda_function",
		"aws::lambda::permission":                          "aws_lambda_permission",
		"aws::lambda::version":                             "aws_lambda_version",
		"aws::logs::loggroup":                              "aws_cloudwatch_loggroup",
		"aws::logs::metricfilter":                          "aws_cloudwatch_log_metric_filter",
		"aws::neptune::dbcluster":                          "aws_neptune_cluster",
		"aws::neptune::dbclusterparametergroup":            "aws_neptune_cluster_parameter_group",
		"aws::neptune::dbinstance":                         "aws_neptune_cluster_instance",
		"aws::neptune::dbparametergroup":                   "aws_neptune_parameter_group",
		"aws::neptune::dbsubnetgroup":                      "aws_neptune_subnet_group",
		"aws::rds::dbcluster":                              "aws_rds_cluster",
		"aws::rds::dbclusterparametergroup":                "aws_rds_cluster_parameter_group",
		"aws::rds::dbinstance":                             "aws_db_instance",
		"aws::rds::dbparametergroup":                       "aws_db_parameter_group",
		"aws::rds::dbsubnetgroup":                          "aws_db_subnet_group",
		"aws::route53::recordset":                          "aws_route53_record",
		"aws::s3::bucket":                                  "aws_s3_bucket",
		"aws::s3::bucketpolicy":                            "aws_s3_bucket_policy",
		"aws::secretsmanager::secret":                      "aws_secrets_manager_secret",
		"aws::servicecatalog::portfolio":                   "aws_service_catalog_portfolio",
		"aws::servicecatalog::portfolioproductassociation": "aws_service_catalog_product_portfolio_association",
		"aws::servicecatalog::portfolioshare":              "aws_service_catalog_portfolio_share",
		"aws::servicecatalog::tagoption":                   "aws_service_catalog_tag_option",
		"aws::servicecatalog::tagoptionassociation":        "aws_service_catalog_tag_option_association",
		"aws::servicediscovery::service":                   "aws_service_discovery_service",
		"aws::sns::subscription":                           "aws_sns_subscription",
		"aws::sns::topic":                                  "aws_sns_topic",
		"aws::sns::topicpolicy":                            "aws_sns_topic_policy",
		"aws::sqs::queue":                                  "aws_sqs_queue",
		"aws::ssm::association":                            "aws_ssm_association",
		"aws::ssm::document":                               "aws_ssm_document",
		"aws::ssm::maintenancewindow":                      "aws_ssm_maintenance_window",
		"aws::ssm::maintenancewindowtarget":                "aws_ssm_maintenance_window_target",
		"aws::ssm::maintenancewindowtask":                  "aws_ssm_maintenance_window_task",
		"aws::stepfunctions::statemachine":                 "aws_sfn_state_machine",
		"aws::wafv2::webaclassociation":                    "aws_wafv2_webacl_association",
		// add more
		"microsoft.aad/domainservices":                                        "azurerm_active_directory_domain_service",
		"microsoft.analysisservices/servers":                                  "azurerm_analysis_services_server",
		"microsoft.apimanagement/service":                                     "azurerm_api_management",
		"microsoft.app/containerapps":                                         "azurerm_container_app",
		"microsoft.app/managedenvironments":                                   "azurerm_container_app_environment",
		"microsoft.authorization/roleassignments":                             "azurerm_role_assignment",
		"microsoft.authorization/roledefinitions":                             "azurerm_role_definition",
		"microsoft.cognitiveservices/accounts":                                "azurerm_cognitive_account",
		"microsoft.compute/availabilitysets":                                  "azurerm_availability_set",
		"microsoft.compute/disks":                                             "azurerm_managed_disk",
		"microsoft.compute/virtualmachines":                                   "azurerm_virtual_machine",
		"microsoft.compute/virtualmachines/extensions":                        "azurerm_virtual_machine_extension",
		"microsoft.compute/virtualmachinescalesets":                           "azurerm_linux_virtual_machine_scale_set",
		"microsoft.containerregistry/registries":                              "azurerm_container_registry",
		"microsoft.containerservice/managedclusters":                          "azurerm_kubernetes_cluster",
		"microsoft.documentdb/databaseaccounts":                               "azurerm_cosmosdb_account",
		"microsoft.insights/activitylogalerts":                                "azurerm_monitor_activity_log_alert",
		"microsoft.keyvault/vaults":                                           "azurerm_key_vault",
		"microsoft.managedidentity/userassignedidentities":                    "azurerm_user_assigned_identity",
		"microsoft.network/applicationgateways":                               "azurerm_application_gateway",
		"microsoft.network/applicationgateways/authenticationcertificates":    "azurerm_application_gateway",
		"microsoft.network/applicationgateways/backendaddresspools":           "azurerm_network_interface_application_gateway_backend_address_pool_association",
		"microsoft.network/applicationgateways/backendhttpsettingscollection": "azurerm_application_gateway",
		"microsoft.network/applicationgateways/frontendipconfigurations":      "azurerm_application_gateway",
		"microsoft.network/applicationgateways/frontendports":                 "azurerm_application_gateway",
		"microsoft.network/applicationgateways/httplisteners":                 "azurerm_application_gateway",
		"microsoft.network/applicationgateways/sslcertificates":               "azurerm_application_gateway",
		"microsoft.network/applicationgatewaywebapplicationfirewallpolicies":  "azurerm_web_application_firewall_policy",
		"microsoft.network/bastionhosts":                                      "azurerm_bastion_host",
		"microsoft.network/networkinterfaces":                                 "azurerm_network_interface",
		"microsoft.network/networksecuritygroups":                             "azurerm_network_security_group",
		"microsoft.network/networksecuritygroups/securityrules":               "azurerm_network_security_rule",
		"microsoft.network/privatednszones":                                   "azurerm_private_dns_zone",
		"microsoft.network/privateendpoints":                                  "azurerm_private_endpoint",
		"microsoft.network/privateendpoints/privatednszonegroups":             "azurerm_private_endpoint",
		"microsoft.network/publicipaddresses":                                 "azurerm_public_ip",
		"microsoft.network/virtualnetworks":                                   "azurerm_virtual_network",
		"microsoft.network/virtualnetworks/subnets":                           "azurerm_subnet",
		"microsoft.operationalinsights/workspaces":                            "azurerm_log_analytics_workspace",
		"microsoft.operationsmanagement/solutions":                            "azurerm_log_analytics_solution",
		"microsoft.resources/deployments":                                     "azurerm_template_deployment",
		"microsoft.servicebus/namespaces":                                     "azurerm_servicebus_namespace",
		"microsoft.servicebus/namespaces/authorizationRules":                  "azurerm_servicebus_namespace_authorization_rule",
		"microsoft.servicebus/namespaces/queues":                              "azurerm_servicebus_queue",
		"microsoft.storage/storageaccounts":                                   "azurerm_storage_account",
	}

	if reverse {
		Reversed := reverseMap(Lookup)
		result = Reversed[resource]
	} else {
		result = Lookup[strings.TrimSuffix(strings.ToLower(resource), "/")]
	}

	var err error

	if result == "" {
		return nil, &missingResourceError{
			Resource: resource,
		}
	}

	return &result, err
}

func reverseMap(m map[string]string) map[string]string {
	n := make(map[string]string, len(m))
	for k, v := range m {
		n[v] = k
	}

	return n
}
