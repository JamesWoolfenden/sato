package see

import (
	"fmt"
	"strings"
)

type missingResourceError struct {
	Resource string
}

func (e *missingResourceError) Error() string {
	return fmt.Sprintf("resource %s not found", e.Resource)
}

// Lookup converts from cloudformation/ARM to terraform resource name.
func Lookup(resource string, reverse bool) (*string, error) {
	var result string

	//goland:noinspection GoLinter
	Lookup := map[string]string{

		"alexa::ask::skill":                                       "",
		"aws::accessanalyzer::analyzer":                           "aws_accessanalyzer_analyzer",
		"aws::acmpca::certificate":                                "aws_acmpca_certificate",
		"aws::acmpca::certificateauthority":                       "aws_acmpca_certificate_authority",
		"aws::acmpca::certificateauthorityactivation":             "",
		"aws::acmpca::permission":                                 "aws_acmpca_permission",
		"aws::amazonmq::broker":                                   "aws_mq_broker",
		"aws::amazonmq::configuration":                            "aws_mq_configuration",
		"aws::amazonmq::configurationassociation":                 "aws_mq_broker",
		"aws::amplify::app":                                       "aws_amplify_app",
		"aws::amplify::branch":                                    "aws_amplify_branch",
		"aws::amplify::domain":                                    "aws_amplify_domain",
		"aws::amplifyuibuilder::Component":                        "",
		"aws::amplifyuibuilder::Form":                             "",
		"aws::amplifyuibuilder::Theme":                            "",
		"aws::apigateway::account":                                "aws_api_gateway_account",
		"aws::apigateway::apikey":                                 "aws_api_gateway_api_key",
		"aws::apigateway::authorizer":                             "aws_api_gateway_authorizer",
		"aws::apigateway::basepathmapping":                        "aws_api_gateway_base_path_mapping",
		"aws::apigateway::clientcertificate":                      "aws_api_gateway_client_certificate",
		"aws::apigateway::deployment":                             "aws_api_gateway_deployment",
		"aws::apigateway::documentationpart":                      "aws_api_gateway_documentation_part",
		"aws::apigateway::documentationversion":                   "aws_api_gateway_documentation_version",
		"aws::apigateway::domainname":                             "aws_api_gateway_domain_name",
		"aws::apigateway::gatewayresponse":                        "aws_api_gateway_gateway_response",
		"aws::apigateway::method":                                 "aws_api_gateway_method",
		"aws::apigateway::model":                                  "aws_api_gateway_model",
		"aws::apigateway::requestvalidator":                       "aws_api_gateway_request_validator",
		"aws::apigateway::resource":                               "aws_api_gateway_resource",
		"aws::apigateway::restapi":                                "aws_api_gateway_rest_api",
		"aws::apigateway::stage":                                  "aws_api_gateway_stage",
		"aws::apigateway::stagekey":                               "",
		"aws::apigateway::usageplan":                              "aws_api_gateway_usage_plan",
		"aws::apigateway::usageplankey":                           "aws_api_gateway_usage_plan_key",
		"aws::apigateway::vpclink":                                "aws_api_gateway_vpc_link",
		"aws::apigatewayv2::api":                                  "aws_apigatewayv2_api",
		"aws::apigatewayv2::apigatewaymanagedoverrides":           "",
		"aws::apigatewayv2::apimapping":                           "aws_apigatewayv2_api_mapping",
		"aws::apigatewayv2::authorizer":                           "aws_apigatewayv2_authorizer",
		"aws::apigatewayv2::deployment":                           "aws_apigatewayv2_deployment",
		"aws::apigatewayv2::domainname":                           "aws_apigatewayv2_domain_name",
		"aws::apigatewayv2::integration":                          "aws_apigatewayv2_integration",
		"aws::apigatewayv2::integrationresponse":                  "aws_apigatewayv2_integration_response",
		"aws::apigatewayv2::model":                                "aws_apigatewayv2_model",
		"aws::apigatewayv2::route":                                "aws_apigatewayv2_route",
		"aws::apigatewayv2::routeresponse":                        "aws_apigatewayv2_route_response",
		"aws::apigatewayv2::stage":                                "aws_apigatewayv2_stage",
		"aws::apigatewayv2::vpclink":                              "aws_apigatewayv2_vpc_link",
		"aws::appconfig::application":                             "aws_appconfig_application",
		"aws::appconfig::configurationprofile":                    "aws_appconfig_configuration_profile",
		"aws::appconfig::deployment":                              "aws_appconfig_deployment",
		"aws::appconfig::deploymentstrategy":                      "aws_appconfig_deployment_strategy",
		"aws::appconfig::environment":                             "aws_appconfig_environment",
		"aws::appconfig::extension":                               "aws_appconfig_extension",
		"aws::appconfig::extensionassociation":                    "aws_appconfig_extension_association",
		"aws::appconfig::hostedconfigurationversion":              "aws_appconfig_hosted_configuration_version",
		"aws::appflow::connector":                                 "",
		"aws::appflow::connectorprofile":                          "aws_appflow_connector_profile",
		"aws::appflow::flow":                                      "aws_appflow_flow",
		"aws::appintegrations::application":                       "",
		"aws::appintegrations::dataintegration":                   "aws_appintegrations_data_integration",
		"aws::appintegrations::eventintegration":                  "aws_appintegrations_event_integration",
		"aws::applicationautoscaling::scalabletarget":             "aws_appautoscaling_target",
		"aws::applicationautoscaling::scalingpolicy":              "aws_appAutoscaling_policy",
		"aws::appmesh::gatewayroute":                              "aws_appmesh_gateway_route",
		"aws::appmesh::mesh":                                      "aws_appmesh_mesh",
		"aws::appmesh::route":                                     "aws_appmesh_route",
		"aws::appmesh::virtualnode":                               "aws_appmesh_virtual_node",
		"aws::appmesh::virtualrouter":                             "aws_appmesh_virtual_router",
		"aws::appmesh::virtualservice":                            "aws_appmesh_virtual_service",
		"aws::apprunner::autoscalingconfiguration":                "aws_apprunner_auto_scaling_configuration_version",
		"aws::apprunner::observabilityconfiguration":              "aws_apprunner_observability_configuration",
		"aws::apprunner::service":                                 "aws_apprunner_service",
		"aws::apprunner::vpcconnector":                            "aws_apprunner_vpc_connector",
		"aws::apprunner::vpcingressconnection":                    "aws_apprunner_vpc_ingress_connection",
		"aws::appstream::appblock":                                "",
		"aws::appstream::appblockbuilder":                         "",
		"aws::appstream::application":                             "",
		"aws::appstream::applicationentitlementassociation":       "",
		"aws::appstream::applicationfleetassociation":             "",
		"aws::appstream::directoryconfig":                         "",
		"aws::appstream::entitlement":                             "",
		"aws::appstream::fleet":                                   "aws_appstream_fleet",
		"aws::appstream::imagebuilder":                            "aws_appstream_image_builder",
		"aws::appstream::stack":                                   "aws_appstream_stack",
		"aws::appstream::stackfleetassociation":                   "aws_appstream_fleet_stack_association",
		"aws::appstream::stackuserassociation":                    "aws_appstream_user_stack_association",
		"aws::appstream::user":                                    "aws_appstream_user",
		"aws::appsync::apicache":                                  "aws_appsync_api_cache",
		"aws::appsync::apikey":                                    "aws_appsync_api_key",
		"aws::appsync::datasource":                                "aws_appsync_datasource",
		"aws::appsync::domainname":                                "aws_appsync_domain_name",
		"aws::appsync::domainnameapiassociation":                  "aws_appsync_domain_name_api_association",
		"aws::appsync::functionconfiguration":                     "aws_appsync_function",
		"aws::appsync::graphqlapi":                                "aws_appsync_graphql_api",
		"aws::appsync::graphqlschema":                             "",
		"aws::appsync::resolver":                                  "aws_appsync_resolver",
		"aws::appsync::sourceapiassociation":                      "aws_appsync_resolver_api_association",
		"aws::apptest::testcase":                                  "",
		"aws::aps::rulegroupsnamespace":                           "",
		"aws::aps::scraper":                                       "",
		"aws::aps::workspace":                                     "",
		"aws::arczonalshift::autoshiftobservernotificationstatus": "",
		"aws::arczonalshift::zonalautoshiftconfiguration":         "",
		"aws::athena::capacityreservation":                        "",
		"aws::athena::datacatalog":                                "aws_athena_data_catalog",
		"aws::athena::namedquery":                                 "aws_athena_named_query",
		"aws::athena::preparedstatement":                          "aws_athena_prepared_statement",
		"aws::athena::workgroup":                                  "aws_athena_workgroup",
		"aws::auditmanager::assessment":                           "aws_auditmanager_assessment",
		"aws::autoscaling::autoscalinggroup":                      "aws_autoscaling_group",
		"aws::autoscaling::launchconfiguration":                   "aws_launch_configuration",
		"aws::autoscaling::lifecyclehook":                         "aws_autoscaling_lifecycle_hook",
		"aws::autoscaling::scalingpolicy":                         "aws_autoscaling_policy",
		"aws::autoscaling::scheduledaction":                       "aws_autoscaling_schedule",
		"aws::autoscaling::warmpool":                              "",
		"aws::autoscalingplans::scalingplan":                      "aws_autoscalingplans_scaling_plan",
		"aws::b2bi::capability":                                   "",
		"aws::b2bi::partnership":                                  "",
		"aws::b2bi::profile":                                      "",
		"aws::b2bi::transformer":                                  "",
		"aws::backup::backupplan":                                 "aws_backup_plan",
		"aws::backup::backupselection":                            "aws_backup_selection",
		"aws::backup::backupvault":                                "aws_backup_vault",
		"aws::backup::framework":                                  "aws_backup_framework",
		"aws::backup::reportplan":                                 "aws_backup_report_plan",
		"aws::backup::restoretestingplan":                         "",
		"aws::backup::restoretestingselection":                    "",
		"aws::backupgateway::hypervisor":                          "",
		"aws::batch::computeenvironment":                          "aws_batch_compute_environment",
		"aws::batch::jobdefinition":                               "aws_batch_job_definition",
		"aws::batch::jobqueue":                                    "aws_batch_job_queue",
		"aws::batch::schedulingpolicy":                            "aws_batch_scheduling_policy",
		"aws::bcmdataexports::export":                             "aws_bcmdataexports_export",
		"aws::bedrock::agent":                                     "aws_bedrockagent_agent",
		"aws::bedrock::agentalias":                                "aws_bedrockagent_agent_alias",
		"aws::bedrock::datasource":                                "aws_bedrockagent_data_source",
		"aws::bedrock::flow":                                      "",
		"aws::bedrock::flowalias":                                 "",
		"aws::bedrock::flowversion":                               "",
		"aws::bedrock::guardrail":                                 "",
		"aws::bedrock::guardrailversion":                          "",
		"aws::bedrock::knowledgebase":                             "aws_bedrockagent_knowledge_base",
		"aws::bedrock::prompt":                                    "",
		"aws::bedrock::promptversion":                             "",
		"aws::billingconductor::billinggroup":                     "",
		"aws::billingconductor::customlineitem":                   "",
		"aws::billingconductor::pricingplan":                      "",
		"aws::billingconductor::pricingrule":                      "",
		"aws::budgets::budget":                                    "aws_budgets_budget",
		"aws::budgets::budgetsaction":                             "aws_budgets_budget_action",
		"aws::cassandra::keyspace":                                "aws_keyspaces_keyspace",
		"aws::cassandra::table":                                   "aws_keyspaces_table",
		"aws::ce::anomalymonitor":                                 "aws_ce_anomaly_monitor",
		"aws::ce::anomalysubscription":                            "aws_ce_anomaly_subscription",
		"aws::ce::costcategory":                                   "aws_ce_cost_category",
		"aws::certificatemanager::account":                        "",
		"aws::certificatemanager::certificate":                    "aws_acm_certificate",
		"aws::chatbot::microsoftteamschannelconfiguration":        "aws_chatbot_teams_channel_configuration",
		"aws::chatbot::slackchannelconfiguration":                 "aws_chatbot_slack_channel_configuration",
		"aws::cleanrooms::analysistemplate":                       "",
		"aws::cleanrooms::collaboration":                          "aws_cleanrooms_collaboration",
		"aws::cleanrooms::configuredtable":                        "aws_cleanrooms_configured_table",
		"aws::cleanrooms::configuredtableassociation":             "",
		"aws::cleanrooms::membership":                             "",
		"aws::cleanrooms::privacybudgettemplate":                  "",
		"aws::cleanroomsml::trainingdataset":                      "",
		"aws::cloud9::environmentec2":                             "aws_cloud9_environment_ec2",
		"aws::cloudformation::customresource":                     "",
		"aws::cloudformation::hookdefaultversion":                 "",
		"aws::cloudformation::hooktypeconfig":                     "",
		"aws::cloudformation::hookversion":                        "",
		"aws::cloudformation::macro":                              "",
		"aws::cloudformation::moduledefaultversion":               "",
		"aws::cloudformation::moduleversion":                      "",
		"aws::cloudformation::publictypeversion":                  "",
		"aws::cloudformation::publisher":                          "",
		"aws::cloudformation::resourcedefaultversion":             "",
		"aws::cloudformation::resourceversion":                    "",
		"aws::cloudformation::stack":                              "aws_cloudformation_stack",
		"aws::cloudformation::stackset":                           "aws_cloudformation_stack_set",
		"aws::cloudformation::typeactivation":                     "",
		"aws::cloudformation::waitcondition":                      "",
		"aws::cloudformation::waitconditionhandle":                "",
		"aws::cloudfront::cachepolicy":                            "aws_cloudfront_cache_policy",
		"aws::cloudfront::cloudFrontOriginAccessIdentity":         "aws_cloudfront_origin_access_identity",
		"aws::cloudfront::continuousdeploymentpolicy":             "aws_cloudfront_continuous_deployment_policy",
		"aws::cloudfront::distribution":                           "aws_cloudfront_distribution",
		"aws::cloudfront::function":                               "aws_cloudfront_function",
		"aws::cloudfront::keygroup":                               "aws_cloudfront_key_group",
		"aws::cloudfront::keyvaluestore":                          "aws_cloudfront_key_value_store",
		"aws::cloudfront::monitoringsubscription":                 "aws_cloudfront_monitoring_subscription",
		"aws::cloudfront::originaccesscontrol":                    "aws_cloudfront_origin_access_control",
		"aws::cloudfront::originrequestpolicy":                    "aws_cloudfront_origin_request_policy",
		"aws::cloudfront::publickey":                              "aws_cloudfront_public_key",
		"aws::cloudfront::realtimelogconfig":                      "aws_cloudfront_realtime_log_config",
		"aws::cloudfront::responseheaderspolicy":                  "aws_cloudfront_response_headers_policy",
		"aws::cloudfront::streamingdistribution":                  "",
		"aws::cloudtrail::channel":                                "",
		"aws::cloudtrail::eventdatastore":                         "aws_cloudtrail_event_data_store",
		"aws::cloudtrail::resourcepolicy":                         "",
		"aws::cloudtrail::trail":                                  "",
		"aws::cloudwatch::alarm":                                  "aws_cloudwatch_metric_alarm",
		"aws::cloudwatch::anomalydetector":                        "",
		"aws::cloudwatch::compositealarm":                         "aws_cloudwatch_composite_alarm",
		"aws::cloudwatch::dashboard":                              "aws_cloudwatch_dashboard",
		"aws::cloudwatch::insightrule":                            "",
		"aws::cloudwatch::metricstream":                           "aws_cloudwatch_metric_stream",
		"aws::codeartifact::domain":                               "aws_codeartifact_domain",
		"aws::codeartifact::packagegroup":                         "",
		"aws::codeartifact::repository":                           "aws_codeartifact_repository",
		"aws::codebuild::fleet":                                   "",
		"aws::codebuild::project":                                 "aws_codebuild_project",
		"aws::codebuild::reportgroup":                             "aws_codebuild_report_group",
		"aws::codebuild::sourcecredential":                        "aws_codebuild_source_credential",
		"aws::codecommit::repository":                             "aws_codecommit_repository",
		"aws::codeconnections::connection":                        "",
		"aws::codedeploy::application":                            "aws_codedeploy_app",
		"aws::codedeploy::deploymentconfig":                       "aws_codedeploy_deployment_config",
		"aws::codedeploy::deploymentgroup":                        "aws_codedeploy_deployment_group",
		"aws::codeguruprofiler::profilinggroup":                   "aws_codeguruprofiler_profiling_group",
		"aws::codegurureviewer::repositoryassociation":            "aws_codegurureviewer_repository_association",
		"aws::codepipeline::customactiontype":                     "aws_codepipeline_custom_action_type",
		"aws::codepipeline::pipeline":                             "aws_codepipeline",
		"aws::codepipeline::webhook":                              "aws_codepipeline_webhook",
		"aws::codestar::githubrepository":                         "",
		"aws::codestarconnections::connection":                    "aws_codestarconnections_connection",
		"aws::codestarconnections::repositorylink":                "",
		"aws::codestarconnections::syncconfiguration":             "",
		"aws::codestarnotifications::notificationrule":            "aws_codestarnotifications_notification_rule",
		"aws::cognito::identitypool":                              "aws_cognito_identity_pool",
		"aws::cognito::identitypoolprincipaltag":                  "aws_cognito_identity_pool_provider_principal_tag",
		"aws::cognito::identitypoolroleattachment":                "aws_cognito_identity_pool_roles_attachment",
		"aws::cognito::logdeliveryconfiguration":                  "",
		"aws::cognito::userpool":                                  "aws_cognito_user_pool",
		"aws::cognito::userpoolclient":                            "aws_cognito_user_pool_client",
		"aws::cognito::userpooldomain":                            "aws_cognito_user_pool_domain",
		"aws::cognito::userpoolgroup":                             "",
		"aws::cognito::userpoolidentityprovider":                  "aws_cognito_identity_provider",
		"aws::cognito::userpoolresourceserver":                    "aws_cognito_resource_server",
		"aws::cognito::userpoolriskconfigurationattachment":       "",
		"aws::cognito::userpooluicustomizationattachment":         "aws_cognito_user_pool_ui_customization",
		"aws::cognito::userpooluser":                              "",
		"aws::cognito::userpoolusertogroupattachment":             "",
		"aws::comprehend::documentclassifier":                     "aws_comprehend_document_classifier",
		"aws::comprehend::flywheel":                               "",
		"aws::config::aggregationauthorization":                   "aws_config_aggregate_authorization",
		"aws::config::configrule":                                 "aws_config_config_rule",
		"aws::config::configurationaggregator":                    "aws_config_configuration_aggregator",
		"aws::config::configurationrecorder":                      "aws_config_configuration_recorder",
		"aws::config::conformancepack":                            "aws_config_conformance_pack",
		"aws::config::deliverychannel":                            "aws_config_delivery_channel",
		"aws::config::organizationconfigrule":                     "aws_config_organization_custom_policy_rule",
		"aws::config::organizationconformancepack":                "aws_config_organization_conformance_pack",
		"aws::config::remediationconfiguration":                   "aws_config_remediation_configuration",
		"aws::config::storedquery":                                "",
		"aws::connect::approvedorigin":                            "",
		"aws::connect::contactflow":                               "aws_connect_contact_flow",
		"aws::connect::contactflowmodule":                         "aws_connect_contact_flow_module",
		"aws::connect::evaluationform":                            "",
		"aws::connect::hoursofoperation":                          "aws_connect_hours_of_operation",
		"aws::connect::instance":                                  "aws_connect_instance",
		"aws::connect::instancestorageconfig":                     "",
		"aws::connect::integrationassociation":                    "",
		"aws::connect::phonenumber":                               "aws_connect_phone_number",
		"aws::connect::predefinedattribute":                       "",
		"aws::connect::prompt":                                    "",
		"aws::connect::queue":                                     "aws_connect_queue",
		"aws::connect::quickconnect":                              "aws_connect_quick_connect",
		"aws::connect::routingprofile":                            "aws_connect_routing_profile",
		"aws::connect::rule":                                      "",
		"aws::connect::securitykey":                               "",
		"aws::connect::securityprofile":                           "aws_connect_security_profile",
		"aws::connect::tasktemplate":                              "",
		"aws::connect::trafficdistributiongroup":                  "",
		"aws::connect::user":                                      "aws_connect_user",
		"aws::connect::userhierarchygroup":                        "aws_connect_user_hierarchy_group",
		"aws::connect::view":                                      "",
		"aws::connect::viewversion":                               "",
		"aws::connectcampaigns::campaign":                         "",

		"aws::controltower::enabledbaseline":                               "",
		"aws::controltower::enabledcontrol":                                "aws_controltower_control",
		"aws::controltower::landingzone":                                   "aws_controltower_landing_zone",
		"aws::cur::reportdefinition":                                       "aws_cur_report_definition",
		"aws::customerprofiles::calculatedattributedefinition":             "",
		"aws::customerprofiles::domain":                                    "",
		"aws::customerprofiles::eventstream":                               "",
		"aws::customerprofiles::integration":                               "",
		"aws::customerprofiles::objecttype":                                "",
		"aws::databrew::dataset":                                           "",
		"aws::databrew::job":                                               "",
		"aws::databrew::project":                                           "",
		"aws::databrew::recipe":                                            "",
		"aws::databrew::ruleset":                                           "",
		"aws::databrew::schedule":                                          "",
		"aws::datapipeline::pipeline":                                      "aws_datapipeline_pipeline",
		"aws::datasync::agent":                                             "aws_datasync_agent",
		"aws::datasync::locationazureblob":                                 "aws_datasync_location_azure_blob",
		"aws::datasync::locationefs":                                       "aws_datasync_location_efs",
		"aws::datasync::locationfsxlustre":                                 "aws_datasync_location_fsx_lustre_file_system",
		"aws::datasync::locationfsxontap":                                  "aws_datasync_location_fsx_ontap_file_system",
		"aws::datasync::locationfsxopenzfs":                                "aws_datasync_location_fsx_openzfs_file_system",
		"aws::datasync::locationfsxwindows":                                "aws_datasync_location_fsx_windows_file_system",
		"aws::datasync::locationhdfs":                                      "aws_datasync_location_hdfs",
		"aws::datasync::locationnfs":                                       "aws_datasync_location_nfs",
		"aws::datasync::locationobjectstorage":                             "aws_datasync_location_object_storage",
		"aws::datasync::locations3":                                        "aws_datasync_location_s3",
		"aws::datasync::locationsmb":                                       "aws_datasync_location_smb",
		"aws::datasync::storagesystem":                                     "",
		"aws::datasync::task":                                              "aws_datasync_task",
		"aws::datazone::datasource":                                        "",
		"aws::datazone::domain":                                            "aws_datazone_domain",
		"aws::datazone::environment":                                       "",
		"aws::datazone::environmentblueprintconfiguration":                 "aws_datazone_environment_blueprint_configuration",
		"aws::datazone::environmentprofile":                                "",
		"aws::datazone::groupprofile":                                      "",
		"aws::datazone::project":                                           "aws_datazone_project",
		"aws::datazone::projectmembership":                                 "",
		"aws::datazone::subscriptiontarget":                                "",
		"aws::datazone::userprofile":                                       "",
		"aws::dax::cluster":                                                "aws_dax_cluster",
		"aws::dax::parametergroup":                                         "aws_dax_parameter_group",
		"aws::dax::subnetgroup":                                            "aws_dax_subnet_group",
		"aws::deadline::farm":                                              "",
		"aws::deadline::fleet":                                             "",
		"aws::deadline::licenseendpoint":                                   "",
		"aws::deadline::meteredproduct":                                    "",
		"aws::deadline::monitor":                                           "",
		"aws::deadline::queue":                                             "",
		"aws::deadline::queueenvironment":                                  "",
		"aws::deadline::queuefleetassociation":                             "",
		"aws::deadline::storageprofile":                                    "",
		"aws::detective::graph":                                            "aws_detective_graph",
		"aws::detective::memberinvitation":                                 "aws_detective_invitation_accepter",
		"aws::detective::organizationadmin":                                "aws_detective_organization_admin_account",
		"aws::devopsguru::loganomalydetectionintegration":                  "",
		"aws::devopsguru::notificationchannel":                             "aws_devopsguru_notification_channel",
		"aws::devopsguru::resourcecollection":                              "aws_devopsguru_resource_collection",
		"aws::directoryservice::microsoftad":                               "aws_directory_service_directory",
		"aws::directoryservice::simplead":                                  "aws_directory_service_directory",
		"aws::dlm::lifecyclepolicy":                                        "aws_dlm_lifecycle_policy",
		"aws::dms::certificate":                                            "aws_dms_certificate",
		"aws::dms::dataprovider":                                           "",
		"aws::dms::endpoint":                                               "aws_dms_endpoint",
		"aws::dms::eventsubscription":                                      "aws_dms_event_subscription",
		"aws::dms::instanceprofile":                                        "",
		"aws::dms::migrationproject":                                       "",
		"aws::dms::replicationconfig":                                      "aws_dms_replication_config",
		"aws::dms::replicationinstance":                                    "aws_dms_replication_instance",
		"aws::dms::replicationsubnetgroup":                                 "aws_dms_replication_subnet_group",
		"aws::dms::replicationtask":                                        "aws_dms_replication_task",
		"aws::docdb::dbcluster":                                            "aws_docdb_cluster",
		"aws::docdb::dbclusterparametergroup":                              "aws_docdb_cluster_parameter_group",
		"aws::docdb::dbinstance":                                           "aws_docdb_cluster_instance",
		"aws::docdb::dbsubnetgroup":                                        "aws_docdb_subnet_group",
		"aws::docdb::eventsubscription":                                    "aws_docdb_event_subscription",
		"aws::docdbelastic::cluster":                                       "aws_docdbelastic_cluster",
		"aws::dynamodb::globaltable":                                       "aws_dynamodb_global_table",
		"aws::dynamodb::table":                                             "aws_dynamodb_table",
		"aws::ec2::capacityreservation":                                    "aws_ec2_capacity_reservation",
		"aws::ec2::capacityreservationfleet":                               "",
		"aws::ec2::carriergateway":                                         "",
		"aws::ec2::clientvpnauthorizationrule":                             "",
		"aws::ec2::clientvpnendpoint":                                      "",
		"aws::ec2::clientvpnroute":                                         "",
		"aws::ec2::clientvpntargetnetworkassociation":                      "",
		"aws::ec2::customergateway":                                        "",
		"aws::ec2::dhcpoptions":                                            "aws_vpc_dhcp_options",
		"aws::ec2::ec2fleet":                                               "",
		"aws::ec2::egressonlyinternetgateway":                              "",
		"aws::ec2::eip":                                                    "aws_eip",
		"aws::ec2::eipassociation":                                         "aws_eip_association",
		"aws::ec2::enclavecertificateiamroleassociation":                   "",
		"aws::ec2::flowlog":                                                "aws_flow_log",
		"aws::ec2::gatewayroutetableassociation":                           "",
		"aws::ec2::host":                                                   "aws_ec2_host",
		"aws::ec2::instance":                                               "aws_instance",
		"aws::ec2::instanceconnectendpoint":                                "",
		"aws::ec2::internetgateway":                                        "aws_Internet_gateway",
		"aws::ec2::ipam":                                                   "aws_vpc_ipam",
		"aws::ec2::ipamallocation":                                         "",
		"aws::ec2::ipampool":                                               "aws_vpc_ipam_pool",
		"aws::ec2::ipampoolcidr":                                           "aws_vpc_ipam_pool_cidr",
		"aws::ec2::ipamresourcediscovery":                                  "aws_vpc_ipam_resource_discovery",
		"aws::ec2::ipamresourcediscoveryassociation":                       "aws_vpc_ipam_resource_discovery_association",
		"aws::ec2::ipamscope":                                              "aws_vpc_ipam_scope",
		"aws::ec2::keypair":                                                "aws_key_pair",
		"aws::ec2::launchtemplate":                                         "aws_launch_template",
		"aws::ec2::localgatewayroute":                                      "aws_ec2_local_gateway_route",
		"aws::ec2::localgatewayroutetable":                                 "aws_ec2_local_gateway_route_table_vpc_association",
		"aws::ec2::localgatewayroutetablevirtualinterfacegroupassociation": "",
		"aws::ec2::localgatewayroutetablevpcassociation":                   "",
		"aws::ec2::natgateway":                                             "aws_nat_gateway",
		"aws::ec2::networkacl":                                             "aws_network_acl",
		"aws::ec2::networkaclentry":                                        "aws_network_acl_rule",
		"aws::ec2::networkinsightsaccessscope":                             "",
		"aws::ec2::networkinsightsaccessscopeanalysis":                     "",
		"aws::ec2::networkinsightsanalysis":                                "aws_ec2_network_insights_analysis",
		"aws::ec2::networkinsightspath":                                    "aws_ec2_network_insights_path",
		"aws::ec2::networkinterface":                                       "aws_network_interface",
		"aws::ec2::networkinterfaceattachment":                             "aws_network_interface_attachment",
		"aws::ec2::networkinterfacepermission":                             "",
		"aws::ec2::networkperformancemetricsubscription":                   "",
		"aws::ec2::placementgroup":                                         "aws_placement_group",
		"aws::ec2::prefixlist":                                             "aws_ec2_managed_prefix_list",
		"aws::ec2::route":                                                  "aws_route",
		"aws::ec2::routetable":                                             "aws_route_table",
		"aws::ec2::securitygroup":                                          "aws_security_group",
		"aws::ec2::securitygroupegress":                                    "aws_security_group_rule_egress",
		"aws::ec2::securitygroupingress":                                   "aws_security_group_rule_ingress",
		"aws::ec2::snapshotblockpublicaccess":                              "",
		"aws::ec2::spotfleet":                                              "aws_spot_fleet_request",
		"aws::ec2::subnet":                                                 "aws_subnet",
		"aws::ec2::subnetcidrblock":                                        "",
		"aws::ec2::subnetnetworkaclassociation":                            "aws_network_acl_association",
		"aws::ec2::subnetroutetableassociation":                            "aws_route_table_association",
		"aws::ec2::trafficmirrorfilter":                                    "aws_ec2_traffic_mirror_filter",
		"aws::ec2::trafficmirrorfilterrule":                                "aws_ec2_traffic_mirror_filter_rule",
		"aws::ec2::trafficmirrorsession":                                   "aws_ec2_traffic_mirror_session",
		"aws::ec2::trafficmirrortarget":                                    "aws_ec2_traffic_mirror_target",
		"aws::ec2::transitgateway":                                         "aws_ec2_transit_gateway",
		"aws::ec2::transitgatewayattachment":                               "aws_ec2_transit_gateway_peering_attachment",
		"aws::ec2::transitgatewayconnect":                                  "aws_ec2_transit_gateway_connect",
		"aws::ec2::transitgatewaymulticastdomain":                          "aws_ec2_transit_gateway_multicast_domain",
		"aws::ec2::transitgatewaymulticastdomainassociation":               "aws_ec2_transit_gateway_multicast_domain_association",
		"aws::ec2::transitgatewaymulticastgroupmember":                     "aws_ec2_transit_gateway_multicast_group_member",
		"aws::ec2::transitgatewaymulticastgroupsource":                     "aws_ec2_transit_gateway_multicast_group_source",
		"aws::ec2::transitgatewaypeeringattachment":                        "aws_ec2_transit_gateway_peering_attachment",
		"aws::ec2::transitgatewayroute":                                    "aws_ec2_transit_gateway_route",
		"aws::ec2::transitgatewayroutetable":                               "aws_ec2_transit_gateway_route_table",
		"aws::ec2::transitgatewayroutetableassociation":                    "aws_ec2_transit_gateway_route_table_association",
		"aws::ec2::transitgatewayroutetablepropagation":                    "aws_ec2_transit_gateway_route_table_propagation",
		"aws::ec2::transitgatewayvpcattachment":                            "aws_ec2_transit_gateway_vpc_attachment",
		"aws::ec2::verifiedaccessendpoint":                                 "aws_verifiedaccess_endpoint",
		"aws::ec2::verifiedaccessgroup":                                    "aws_verifiedaccess_group",
		"aws::ec2::verifiedaccessinstance":                                 "aws_verifiedaccess_instance",
		"aws::ec2::verifiedaccesstrustprovider":                            "aws_verifiedaccess_trust_provider",
		"aws::ec2::volume":                                                 "aws_ebs_volume",
		"aws::ec2::volumeattachment":                                       "aws_volume_attachment",
		"aws::ec2::vpc":                                                    "aws_vpc",
		"aws::ec2::vpccidrblock":                                           "",
		"aws::ec2::vpcdhcpoptionsassociation":                              "aws_vpc_dhcp_options_association",
		"aws::ec2::vpcendpoint":                                            "aws_vpc_endpoint",
		"aws::ec2::vpcendpointconnectionnotification":                      "aws_vpc_endpoint_connection_notification",
		"aws::ec2::vpcendpointservice":                                     "aws_vpc_endpoint_service",
		"aws::ec2::vpcendpointservicepermissions":                          "",
		"aws::ec2::vpcgatewayattachment":                                   "aws_vpn_gatewayAttachment",
		"aws::ec2::vpcpeeringconnection":                                   "aws_vpc_peering_connection",
		"aws::ec2::vpnconnection":                                          "aws_vpn_connection",
		"aws::ec2::vpnconnectionroute":                                     "aws_vpn_connection_route",
		"aws::ec2::vpngateway":                                             "aws_vpn_gateway",
		"aws::ec2::vpngatewayroutepropagation":                             "aws_vpn_gateway_route_propagation",
		"aws::ecr::publicrepository":                                       "aws_ecrpublic_repository",
		"aws::ecr::pullthroughcacherule":                                   "aws_ecr_pull_through_cache_rule",
		"aws::ecr::registrypolicy":                                         "aws_ecr_registry_policy",
		"aws::ecr::replicationconfiguration":                               "aws_ecr_replication_configuration",
		"aws::ecr::repository":                                             "aws_ecr_repository",
		"aws::ecr::repositorycreationtemplate":                             "aws_ecr_repository_creation_template",
		"aws::ecs::capacityprovider":                                       "aws_ecs_capacity_provider",
		"aws::ecs::cluster":                                                "aws_ecs_cluster",
		"aws::ecs::clustercapacityproviderassociations":                    "",
		"aws::ecs::primarytaskset":                                         "",
		"aws::ecs::service":                                                "aws_ecs_service",
		"aws::ecs::taskdefinition":                                         "aws_ecs_task_definition",
		"aws::ecs::taskset":                                                "aws_ecs_task_set",
		"aws::efs::accesspoint":                                            "aws_efs_access_point",
		"aws::efs::filesystem":                                             "aws_efs_file_system",
		"aws::efs::mounttarget":                                            "aws_efs_mount_target",
		"aws::eks::accessentry":                                            "aws_eks_access_entry",
		"aws::eks::addon":                                                  "aws_eks_addon",
		"aws::eks::cluster":                                                "aws_eks_cluster",
		"aws::eks::fargateprofile":                                         "aws_eks_fargate_profile",
		"aws::eks::identityproviderconfig":                                 "aws_eks_identity_provider_config",
		"aws::eks::nodegroup":                                              "aws_eks_node_group",
		"aws::eks::podidentityassociation":                                 "aws_eks_pod_identity_association",
		"aws::elasticache::cachecluster":                                   "aws_elasticache_cluster",
		"aws::elasticache::globalreplicationgroup":                         "aws_elasticache_global_replication_group",
		"aws::elasticache::parametergroup":                                 "aws_elasticache_parameter_group",
		"aws::elasticache::replicationgroup":                               "aws_elasticache_replication_group",
		"aws::elasticache::securitygroup":                                  "",
		"aws::elasticache::securitygroupingress":                           "",
		"aws::elasticache::serverlesscache":                                "",
		"aws::elasticache::subnetgroup":                                    "aws_elasticache_subnet_group",
		"aws::elasticache::user":                                           "aws_elasticache_user",
		"aws::elasticache::usergroup":                                      "aws_elasticache_user_group",
		"aws::elasticbeanstalk::application":                               "aws_elastic_beanstalk_application",
		"aws::elasticbeanstalk::applicationversion":                        "aws_elastic_beanstalk_application_version",
		"aws::elasticbeanstalk::configurationtemplate":                     "aws_elastic_beanstalk_configuration_template",
		"aws::elasticbeanstalk::environment":                               "aws_elastic_beanstalk_environment",
		"aws::elasticloadbalancing::loadbalancer":                          "aws_elb",
		"aws::elasticloadbalancingv2::listener":                            "aws_lb_listener",
		"aws::elasticloadbalancingv2::listenerrule":                        "aws_lb_listener_rule",
		"aws::elasticloadbalancingv2::loadbalancer":                        "aws_lb",
		"aws::elasticloadbalancingv2::targetgroup":                         "aws_lb_target_group",
		"aws::elasticloadbalancingv2::truststore":                          "",
		"aws::elasticloadbalancingv2::truststorerevocation":                "",
		"aws::elasticsearch::domain":                                       "aws_elasticsearch_domain",
		"aws::emr::cluster":                                                "aws_emr_cluster",
		"aws::emr::instancefleetconfig":                                    "aws_emr_instance_fleet",
		"aws::emr::instancegroupconfig":                                    "aws_emr_instance_group",
		"aws::emr::securityconfiguration":                                  "aws_emr_security_configuration",
		"aws::emr::step":                                                   "",
		"aws::emr::studio":                                                 "aws_emr_studio",
		"aws::emr::studiosessionmapping":                                   "aws_emr_studio_session_mapping",
		"aws::emr::walworkspace":                                           "",
		"aws::emrcontainers::virtualcluster":                               "aws_emrcontainers_virtual_cluster",
		"aws::emrserverless::application":                                  "aws_emrserverless_application",
		"aws::entityresolution::idmappingworkflow":                         "",
		"aws::entityresolution::idnamespace":                               "",
		"aws::entityresolution::matchingworkflow":                          "",
		"aws::entityresolution::policystatement":                           "",
		"aws::entityresolution::schemamapping":                             "",
		"aws::events::apidestination":                                      "aws_cloudwatch_event_api_destination",
		"aws::events::archive":                                             "aws_cloudwatch_event_archive",
		"aws::events::connection":                                          "aws_cloudwatch_event_connection",
		"aws::events::endpoint":                                            "aws_cloudwatch_event_endpoint",
		"aws::events::eventbus":                                            "aws_cloudwatch_event_bus",
		"aws::events::eventbuspolicy":                                      "aws_cloudwatch_event_bus_policy",
		"aws::events::rule":                                                "aws_cloudwatch_event_rule",
		"aws::eventschemas::discoverer":                                    "aws_schemas_discoverer",
		"aws::eventschemas::registry":                                      "aws_schemas_registry",
		"aws::eventschemas::registrypolicy":                                "aws_schemas_registry_policy",
		"aws::eventschemas::schema":                                        "aws_schemas_schema",
		"aws::evidently::experiment":                                       "",
		"aws::evidently::feature":                                          "aws_evidently_feature",
		"aws::evidently::launch":                                           "aws_evidently_launch",
		"aws::evidently::project":                                          "aws_evidently_project",
		"aws::evidently::segment":                                          "aws_evidently_segment",
		"aws::finspace::environment":                                       "aws_finspace_kx_environment",
		"aws::fis::experimenttemplate":                                     "aws_fis_experiment_template",
		"aws::fis::targetaccountconfiguration":                             "",
		"aws::fms::notificationchannel":                                    "",
		"aws::fms::policy":                                                 "aws_fms_policy",
		"aws::fms::resourceset":                                            "aws_fms_resource_set",
		"aws::forecast::dataset":                                           "",
		"aws::forecast::datasetgroup":                                      "",
		"aws::frauddetector::detector":                                     "",
		"aws::frauddetector::entitytype":                                   "",
		"aws::frauddetector::eventtype":                                    "",
		"aws::frauddetector::label":                                        "",
		"aws::frauddetector::list":                                         "",
		"aws::frauddetector::outcome":                                      "",
		"aws::frauddetector::variable":                                     "",
		"aws::fsx::datarepositoryassociation":                              "aws_fsx_data_repository_association",
		"aws::fsx::filesystem":                                             "aws_fsx_ontap_file_system",
		"aws::fsx::snapshot":                                               "aws_fsx_openzfs_snapshot",
		"aws::fsx::storagevirtualmachine":                                  "aws_fsx_ontap_storage_virtual_machine",
		"aws::fsx::volume":                                                 "aws_fsx_ontap_volume",
		"aws::gamelift::alias":                                             "aws_gamelift_alias",
		"aws::gamelift::build":                                             "aws_gamelift_build",
		"aws::gamelift::containergroupdefinition":                          "",
		"aws::gamelift::fleet":                                             "aws_gamelift_fleet",
		"aws::gamelift::gameservergroup":                                   "aws_gamelift_game_server_group",
		"aws::gamelift::gamesessionqueue":                                  "aws_gamelift_game_session_queue",
		"aws::gamelift::location":                                          "",
		"aws::gamelift::matchmakingconfiguration":                          "",
		"aws::gamelift::matchmakingruleset":                                "",
		"aws::gamelift::script":                                            "aws_gamelift_script",
		"aws::globalaccelerator::accelerator":                              "aws_globalaccelerator_accelerator",
		"aws::globalaccelerator::crossaccountattachment":                   "aws_globalaccelerator_cross_account_attachment",
		"aws::globalaccelerator::endpointgroup":                            "aws_globalaccelerator_endpoint_group",
		"aws::globalaccelerator::listener":                                 "aws_globalaccelerator_listener",
		"aws::glue::classifier":                                            "aws_glue_classifier",
		"aws::glue::connection":                                            "aws_glue_connection",
		"aws::glue::crawler":                                               "aws_glue_crawler",
		"aws::glue::customentitytype":                                      "",
		"aws::glue::database":                                              "aws_glue_catalog_database",
		"aws::glue::datacatalogencryptionsettings":                         "aws_glue_data_catalog_encryption_settings",
		"aws::glue::dataqualityruleset":                                    "aws_glue_data_quality_ruleset",
		"aws::glue::devendpoint":                                           "aws_glue_dev_endpoint",
		"aws::glue::job":                                                   "aws_glue_job",
		"aws::glue::mltransform":                                           "aws_glue_ml_transform",
		"aws::glue::partition":                                             "aws_glue_partition",
		"aws::glue::registry":                                              "aws_glue_registry",
		"aws::glue::schema":                                                "aws_glue_schema",
		"aws::glue::schemaversion":                                         "",
		"aws::glue::schemaversionmetadata":                                 "",
		"aws::glue::securityconfiguration":                                 "aws_glue_security_configuration",
		"aws::glue::table":                                                 "aws_glue_catalog_table",
		"aws::glue::tableoptimizer":                                        "",
		"aws::glue::trigger":                                               "aws_glue_trigger",
		"aws::glue::workflow":                                              "aws_glue_workflow",
		"aws::grafana::workspace":                                          "",
		"aws::greengrass::connectordefinition":                             "",
		"aws::greengrass::connectordefinitionversion":                      "",
		"aws::greengrass::coredefinition":                                  "",
		"aws::greengrass::coredefinitionversion":                           "",
		"aws::greengrass::devicedefinition":                                "",
		"aws::greengrass::devicedefinitionversion":                         "",
		"aws::greengrass::functiondefinition":                              "",
		"aws::greengrass::functiondefinitionversion":                       "",
		"aws::greengrass::group":                                           "",
		"aws::greengrass::groupversion":                                    "",
		"aws::greengrass::loggerdefinition":                                "",
		"aws::greengrass::loggerdefinitionversion":                         "",
		"aws::greengrass::resourcedefinition":                              "",
		"aws::greengrass::resourcedefinitionversion":                       "",
		"aws::greengrass::subscriptiondefinition":                          "",
		"aws::greengrass::subscriptiondefinitionversion":                   "",
		"aws::greengrassv2::componentversion":                              "",
		"aws::greengrassv2::deployment":                                    "",
		"aws::groundstation::config":                                       "",
		"aws::groundstation::dataflowendpointgroup":                        "",
		"aws::groundstation::missionprofile":                               "",
		"aws::guardduty::detector":                                         "aws_guardduty_detector",
		"aws::guardduty::filter":                                           "aws_guardduty_filter",
		"aws::guardduty::ipset":                                            "aws_guardduty_ipset",
		"aws::guardduty::malwareprotectionplan":                            "aws_guardduty_malware_protection_plan",
		"aws::guardduty::master":                                           "",
		"aws::guardduty::member":                                           "aws_guardduty_member",
		"aws::guardduty::threatintelset":                                   "aws_guardduty_threatintelset",
		"aws::healthimaging::datastore":                                    "",
		"aws::healthlake::fhirdatastore":                                   "",
		"aws::iam::accessKey":                                              "aws_iam_access_key",
		"aws::iam::group":                                                  "aws_iam_group",
		"aws::iam::grouppolicy":                                            "aws_iam_group_policy",
		"aws::iam::instanceprofile":                                        "aws_iam_instance_profile",
		"aws::iam::managedpolicy":                                          "aws_iam_managed_policy",
		"aws::iam::oidcprovider":                                           "",
		"aws::iam::policy":                                                 "aws_iam_policy",
		"aws::iam::role":                                                   "aws_iam_role",
		"aws::iam::rolepolicy":                                             "aws_iam_role_policy",
		"aws::iam::samlprovider":                                           "aws_iam_saml_provider",
		"aws::iam::servercertificate":                                      "aws_iam_server_certificate",
		"aws::iam::servicelinkedrole":                                      "aws_iam_service_linked_role",
		"aws::iam::user":                                                   "aws_iam_user",
		"aws::iam::userpolicy":                                             "aws_iam_user",
		"aws::iam::usertogroupaddition":                                    "aws_iam_group_membership",
		"aws::iam::virtualmfadevice":                                       "aws_iam_virtual_mfa_device",
		"aws::identitystore::group":                                        "",
		"aws::identitystore::groupmembership":                              "",
		"aws::imagebuilder::component":                                     "aws_imagebuilder_component",
		"aws::imagebuilder::containerrecipe":                               "aws_imagebuilder_container_recipe",
		"aws::imagebuilder::distributionconfiguration":                     "aws_imagebuilder_distribution_configuration",
		"aws::imagebuilder::image":                                         "aws_imagebuilder_image",
		"aws::imagebuilder::imagepipeline":                                 "aws_imagebuilder_image_pipeline",
		"aws::imagebuilder::imagerecipe":                                   "aws_imagebuilder_image_recipe",
		"aws::imagebuilder::infrastructureconfiguration":                   "aws_imagebuilder_infrastructure_configuration",
		"aws::imagebuilder::lifecyclepolicy":                               "",
		"aws::imagebuilder::workflow":                                      "aws_imagebuilder_workflow",
		"aws::inspector::assessmenttarget":                                 "aws_inspector_assessment_target",
		"aws::inspector::assessmenttemplate":                               "aws_inspector_assessment_template",
		"aws::inspector::resourcegroup":                                    "aws_inspector_resource_group",
		"aws::inspectorv2::cisscanconfiguration":                           "",
		"aws::inspectorv2::filter":                                         "",
		"aws::internetmonitor::monitor":                                    "",
		"aws::iot1click::device":                                           "",
		"aws::iot1click::placement":                                        "",
		"aws::iot1click::project":                                          "",
		"aws::iot::accountauditconfiguration":                              "",
		"aws::iot::authorizer":                                             "aws_iot_authorizer",
		"aws::iot::billinggroup":                                           "aws_iot_billing_group",
		"aws::iot::cacertificate":                                          "aws_iot_ca_certificate",
		"aws::iot::certificate":                                            "aws_iot_certificate",
		"aws::iot::certificateprovider":                                    "",
		"aws::iot::custommetric":                                           "",
		"aws::iot::dimension":                                              "",
		"aws::iot::domainconfiguration":                                    "",
		"aws::iot::fleetmetric":                                            "",
		"aws::iot::jobtemplate":                                            "",
		"aws::iot::logging":                                                "",
		"aws::iot::mitigationaction":                                       "",
		"aws::iot::policy":                                                 "aws_iot_policy",
		"aws::iot::policyprincipalattachment":                              "aws_iot_policy_attachment",
		"aws::iot::provisioningtemplate":                                   "aws_iot_provisioning_template",
		"aws::iot::resourcespecificlogging":                                "",
		"aws::iot::rolealias":                                              "aws_iot_role_alias",
		"aws::iot::scheduledaudit":                                         "",
		"aws::iot::securityprofile":                                        "",
		"aws::iot::softwarepackage":                                        "",
		"aws::iot::softwarepackageversion":                                 "",
		"aws::iot::thing":                                                  "aws_iot_thing",
		"aws::iot::thinggroup":                                             "aws_iot_thing_group",
		"aws::iot::thingprincipalattachment":                               "aws_iot_thing_principal_attachment",
		"aws::iot::thingtype":                                              "aws_iot_thing_type",
		"aws::iot::topicrule":                                              "aws_iot_topic_rule",
		"aws::iot::topicruledestination":                                   "aws_iot_topic_rule_destination",
		"aws::iotanalytics::channel":                                       "",
		"aws::iotanalytics::dataset":                                       "",
		"aws::iotanalytics::datastore":                                     "",
		"aws::iotanalytics::pipeline":                                      "",
		"aws::iotcoredeviceadvisor::suitedefinition":                       "",
		"aws::iotevents::alarmmodel":                                       "",
		"aws::iotevents::detectormodel":                                    "",
		"aws::iotevents::input":                                            "",
		"aws::iotfleethub::application":                                    "",
		"aws::iotfleetwise::campaign":                                      "",
		"aws::iotfleetwise::decodermanifest":                               "",
		"aws::iotfleetwise::fleet":                                         "",
		"aws::iotfleetwise::modelmanifest":                                 "",
		"aws::iotfleetwise::signalcatalog":                                 "",
		"aws::iotfleetwise::vehicle":                                       "",
		"aws::iotsitewise::accesspolicy":                                   "",
		"aws::iotsitewise::asset":                                          "",
		"aws::iotsitewise::assetmodel":                                     "",
		"aws::iotsitewise::dashboard":                                      "",
		"aws::iotsitewise::gateway":                                        "",
		"aws::iotsitewise::portal":                                         "",
		"aws::iotsitewise::project":                                        "",
		"aws::iotthingsgraph::flowtemplate":                                "",
		"aws::iottwinmaker::componenttype":                                 "",
		"aws::iottwinmaker::entity":                                        "",
		"aws::iottwinmaker::scene":                                         "",
		"aws::iottwinmaker::syncjob":                                       "",
		"aws::iottwinmaker::workspace":                                     "",
		"aws::iotwireless::destination":                                    "",
		"aws::iotwireless::deviceprofile":                                  "",
		"aws::iotwireless::fuotatask":                                      "",
		"aws::iotwireless::multicastgroup":                                 "",
		"aws::iotwireless::networkanalyzerconfiguration":                   "",
		"aws::iotwireless::partneraccount":                                 "",
		"aws::iotwireless::serviceprofile":                                 "",
		"aws::iotwireless::taskdefinition":                                 "",
		"aws::iotwireless::wirelessdevice":                                 "",
		"aws::iotwireless::wirelessdeviceimporttask":                       "",
		"aws::iotwireless::wirelessgateway":                                "",
		"aws::ivs::channel":                                                "aws_ivs_channel",
		"aws::ivs::encoderconfiguration":                                   "",
		"aws::ivs::playbackkeypair":                                        "aws_ivs_playback_key_pair",
		"aws::ivs::playbackrestrictionpolicy":                              "",
		"aws::ivs::recordingconfiguration":                                 "aws_ivs_recording_configuration",
		"aws::ivs::stage":                                                  "",
		"aws::ivs::storageconfiguration":                                   "",
		"aws::ivs::streamkey":                                              "",
		"aws::ivschat::loggingconfiguration":                               "aws_ivschat_logging_configuration",
		"aws::ivschat::room":                                               "aws_ivschat_room",
		"aws::kafkaconnect::connector":                                     "",
		"aws::kafkaconnect::customplugin":                                  "",
		"aws::kafkaconnect::workerconfiguration":                           "",
		"aws::kendra::datasource":                                          "aws_kendra_data_source",
		"aws::kendra::faq":                                                 "aws_kendra_faq",
		"aws::kendra::index":                                               "aws_kendra_index",
		"aws::kendraranking::executionplan":                                "",
		"aws::kinesis::stream":                                             "aws_kinesis_stream",
		"aws::kinesis::streamconsumer":                                     "aws_kinesis_stream_consumer",
		"aws::kinesisanalytics::application":                               "aws_kinesis_analytics_application",
		"aws::kinesisanalytics::applicationoutput":                         "",
		"aws::kinesisanalytics::applicationreferencedatasource":            "",
		"aws::kinesisanalyticsv2::application":                             "aws_kinesisanalyticsv2_application",
		"aws::kinesisanalyticsv2::applicationcloudwatchloggingoption":      "",
		"aws::kinesisanalyticsv2::applicationoutput":                       "",
		"aws::kinesisanalyticsv2::applicationreferencedatasource":          "",
		"aws::kinesisfirehose::deliverystream":                             "aws_kinesis_firehose_delivery_stream",
		"aws::kinesisvideo::signalingchannel":                              "",
		"aws::kinesisvideo::stream":                                        "aws_kinesis_video_stream",
		"aws::kms::alias":                                                  "aws_kms_alias",
		"aws::kms::key":                                                    "aws_kms_key",
		"aws::kms::replicakey":                                             "aws_kms_replica_key",
		"aws::lakeformation::datacellsfilter":                              "aws_lakeformation_data_cells_filter",
		"aws::lakeformation::datalakesettings":                             "aws_lakeformation_data_lake_settings",
		"aws::lakeformation::permissions":                                  "aws_lakeformation_permissions",
		"aws::lakeformation::principalpermissions":                         "",
		"aws::lakeformation::resource":                                     "aws_lakeformation_resource",
		"aws::lakeformation::tag":                                          "aws_lakeformation_lf_tag",
		"aws::lakeformation::tagassociation":                               "",
		"aws::lambda::alias":                                               "aws_lambda_alias",
		"aws::lambda::codesigningconfig":                                   "aws_lambda_code_signing_config",
		"aws::lambda::eventinvokeconfig":                                   "aws_lambda_function_event_invoke_config",
		"aws::lambda::eventsourcemapping":                                  "aws_lambda_event_source_mapping",
		"aws::lambda::function":                                            "aws_lambda_function",
		"aws::lambda::layerversion":                                        "aws_lambda_layer_version",
		"aws::lambda::layerversionpermission":                              "aws_lambda_layer_version_permission",
		"aws::lambda::permission":                                          "aws_lambda_permission",
		"aws::lambda::url":                                                 "",
		"aws::lambda::version":                                             "aws_lambda_version",
		"aws::launchwizard::deployment":                                    "",
		"aws::lex::bot":                                                    "aws_lex_bot",
		"aws::lex::botalias":                                               "aws_lex_bot_alias",
		"aws::lex::botversion":                                             "",
		"aws::lex::resourcepolicy":                                         "",
		"aws::licensemanager::grant":                                       "aws_licensemanager_grant",
		"aws::licensemanager::license":                                     "aws_licensemanager_license_configuration",
		"aws::lightsail::alarm":                                            "",
		"aws::lightsail::bucket":                                           "aws_lightsail_bucket",
		"aws::lightsail::certificate":                                      "aws_lightsail_certificate",
		"aws::lightsail::container":                                        "",
		"aws::lightsail::database":                                         "aws_lightsail_database",
		"aws::lightsail::disk":                                             "aws_lightsail_disk",
		"aws::lightsail::distribution":                                     "aws_lightsail_distribution",
		"aws::lightsail::instance":                                         "aws_lightsail_instance",
		"aws::lightsail::loadbalancer":                                     "aws_lightsail_lb",
		"aws::lightsail::loadbalancertlscertificate":                       "",
		"aws::lightsail::staticip":                                         "aws_lightsail_static_ip",
		"aws::location::apikey":                                            "",
		"aws::location::geofencecollection":                                "aws_location_geofence_collection",
		"aws::location::map":                                               "aws_location_map",
		"aws::location::placeindex":                                        "aws_location_place_index",
		"aws::location::routecalculator":                                   "aws_location_route_calculator",
		"aws::location::tracker":                                           "aws_location_tracker",
		"aws::location::trackerconsumer":                                   "",
		"aws::logs::accountpolicy":                                         "aws_cloudwatch_log_account_policy",
		"aws::logs::delivery":                                              "",
		"aws::logs::deliverydestination":                                   "",
		"aws::logs::deliverysource":                                        "",
		"aws::logs::destination":                                           "",
		"aws::logs::loganomalydetector":                                    "",
		"aws::logs::loggroup":                                              "aws_cloudwatch_loggroup",
		"aws::logs::logstream":                                             "",
		"aws::logs::metricfilter":                                          "aws_cloudwatch_log_metric_filter",
		"aws::logs::querydefinition":                                       "",
		"aws::logs::resourcepolicy":                                        "aws_cloudwatch_log_resource_policy",
		"aws::logs::subscriptionfilter":                                    "",
		"aws::lookoutequipment::inferencescheduler":                        "",
		"aws::lookoutmetrics::alert":                                       "",
		"aws::lookoutmetrics::anomalydetector":                             "",
		"aws::lookoutvision::project":                                      "",
		"aws::m2::application":                                             "",
		"aws::m2::environment":                                             "",
		"aws::macie::allowlist":                                            "",
		"aws::macie::customdataidentifier":                                 "aws_macie2_custom_data_identifier",
		"aws::macie::findingsfilter":                                       "aws_macie2_findings_filter",
		"aws::macie::session":                                              "",
		"aws::managedblockchain::accessor":                                 "",
		"aws::managedblockchain::member":                                   "",
		"aws::managedblockchain::node":                                     "",
		"aws::mediaconnect::bridge":                                        "",
		"aws::mediaconnect::bridgeoutput":                                  "",
		"aws::mediaconnect::bridgesource":                                  "",
		"aws::mediaconnect::flow":                                          "",
		"aws::mediaconnect::flowentitlement":                               "",
		"aws::mediaconnect::flowoutput":                                    "",
		"aws::mediaconnect::flowsource":                                    "",
		"aws::mediaconnect::flowvpcinterface":                              "",
		"aws::mediaconnect::gateway":                                       "",
		"aws::mediaconvert::jobtemplate":                                   "",
		"aws::mediaconvert::preset":                                        "",
		"aws::mediaconvert::queue":                                         "aws_media_convert_queue",
		"aws::medialive::channel":                                          "aws_medialive_channel",
		"aws::medialive::input":                                            "aws_medialive_input",
		"aws::medialive::inputsecuritygroup":                               "aws_medialive_input_security_group",
		"aws::medialive::multiplex":                                        "aws_medialive_multiplex",
		"aws::medialive::multiplexprogram":                                 "aws_medialive_multiplex_program",
		"aws::mediapackage::asset":                                         "",
		"aws::mediapackage::channel":                                       "aws_media_package_channel",
		"aws::mediapackage::originendpoint":                                "",
		"aws::mediapackage::packagingconfiguration":                        "",
		"aws::mediapackage::packaginggroup":                                "",
		"aws::mediapackagev2::channel":                                     "",
		"aws::mediapackagev2::channelgroup":                                "",
		"aws::mediapackagev2::channelpolicy":                               "",
		"aws::mediapackagev2::originendpoint":                              "",
		"aws::mediapackagev2::originendpointpolicy":                        "",
		"aws::mediastore::container":                                       "aws_media_store_container",
		"aws::mediatailor::channel":                                        "",
		"aws::mediatailor::channelpolicy":                                  "",
		"aws::mediatailor::livesource":                                     "",
		"aws::mediatailor::playbackconfiguration":                          "",
		"aws::mediatailor::sourcelocation":                                 "",
		"aws::mediatailor::vodsource":                                      "",
		"aws::memorydb::acl":                                               "aws_memorydb_acl",
		"aws::memorydb::cluster":                                           "aws_memorydb_cluster",
		"aws::memorydb::parametergroup":                                    "aws_memorydb_parameter_group",
		"aws::memorydb::subnetgroup":                                       "aws_memorydb_subnet_group",
		"aws::memorydb::user":                                              "",
		"aws::msk::batchscramsecret":                                       "",
		"aws::msk::cluster":                                                "aws_msk_cluster",
		"aws::msk::clusterpolicy":                                          "aws_msk_cluster_policy",
		"aws::msk::configuration":                                          "aws_msk_configuration",
		"aws::msk::replicator":                                             "aws_msk_replicator",
		"aws::msk::serverlesscluster":                                      "aws_msk_serverless_cluster",
		"aws::msk::vpcconnection":                                          "aws_msk_vpc_connection",
		"aws::mwaa::environment":                                           "aws_mwaa_environment",
		"aws::neptune::dbcluster":                                          "aws_neptune_cluster",
		"aws::neptune::dbclusterparametergroup":                            "aws_neptune_cluster_parameter_group",
		"aws::neptune::dbinstance":                                         "aws_neptune_cluster_instance",
		"aws::neptune::dbparametergroup":                                   "aws_neptune_parameter_group",
		"aws::neptune::dbsubnetgroup":                                      "aws_neptune_subnet_group",
		"aws::neptune::eventsubscription":                                  "",
		"aws::neptunegraph::graph":                                         "",
		"aws::neptunegraph::privategraphendpoint":                          "",
		"aws::networkfirewall::firewall":                                   "aws_networkfirewall_firewall",
		"aws::networkfirewall::firewallpolicy":                             "aws_networkfirewall_firewall_policy",
		"aws::networkfirewall::loggingconfiguration":                       "aws_networkfirewall_logging_configuration",
		"aws::networkfirewall::rulegroup":                                  "aws_networkfirewall_rule_group",
		"aws::networkfirewall::tlsinspectionconfiguration":                 "aws_networkfirewall_tls_inspection_configuration",
		"aws::networkmanager::connectattachment":                           "aws_networkmanager_connect_attachment",
		"aws::networkmanager::connectpeer":                                 "aws_networkmanager_connect_peer",
		"aws::networkmanager::corenetwork":                                 "aws_networkmanager_core_network",
		"aws::networkmanager::customergatewayassociation":                  "aws_networkmanager_customer_gateway_association",
		"aws::networkmanager::device":                                      "aws_networkmanager_device",
		"aws::networkmanager::globalnetwork":                               "aws_networkmanager_global_network",
		"aws::networkmanager::link":                                        "aws_networkmanager_link",
		"aws::networkmanager::linkassociation":                             "aws_networkmanager_link_association",
		"aws::networkmanager::site":                                        "aws_networkmanager_site",
		"aws::networkmanager::sitetositevpnattachment":                     "aws_networkmanager_site_to_site_vpn_attachment",
		"aws::networkmanager::transitgatewaypeering":                       "aws_networkmanager_transit_gateway_peering",
		"aws::networkmanager::transitgatewayregistration":                  "aws_networkmanager_transit_gateway_registration",
		"aws::networkmanager::transitgatewayroutetableattachment":          "aws_networkmanager_transit_gateway_route_table_attachment",
		"aws::networkmanager::vpcattachment":                               "aws_networkmanager_vpc_attachment",
		"aws::nimblestudio::launchprofile":                                 "",
		"aws::nimblestudio::streamingimage":                                "",
		"aws::nimblestudio::studio":                                        "",
		"aws::nimblestudio::studiocomponent":                               "",
		"aws::oam::link":                                                   "",
		"aws::oam::sink":                                                   "",
		"aws::omics::annotationstore":                                      "",
		"aws::omics::referencestore":                                       "",
		"aws::omics::rungroup":                                             "",
		"aws::omics::sequencestore":                                        "",
		"aws::omics::variantstore":                                         "",
		"aws::omics::workflow":                                             "",
		"aws::opensearchserverless::accesspolicy":                          "aws_opensearchserverless_access_policy",
		"aws::opensearchserverless::collection":                            "aws_opensearchserverless_collection",
		"aws::opensearchserverless::lifecyclepolicy":                       "aws_opensearchserverless_lifecycle_policy",
		"aws::opensearchserverless::securityconfig":                        "aws_opensearchserverless_security_config",
		"aws::opensearchserverless::securitypolicy":                        "aws_opensearchserverless_security_policy",
		"aws::opensearchserverless::vpcendpoint":                           "aws_opensearchserverless_vpc_endpoint",
		"aws::opensearchservice::domain":                                   "aws_opensearch_domain",
		"aws::opsworks::app":                                               "aws_opensearch_domain",
		"aws::opsworks::elasticloadbalancerattachment":                     "",
		"aws::opsworks::instance":                                          "",
		"aws::opsworks::layer":                                             "",
		"aws::opsworks::stack":                                             "aws_opsworks_stack",
		"aws::opsworks::userprofile":                                       "",
		"aws::opsworks::volume":                                            "",
		"aws::opsworkscm::server":                                          "",
		"aws::organizations::account":                                      "aws_organizations_account",
		"aws::organizations::organization":                                 "aws_organizations_organization",
		"aws::organizations::organizationalunit":                           "aws_organizations_organizational_unit",
		"aws::organizations::policy":                                       "aws_organizations_policy",
		"aws::organizations::resourcepolicy":                               "aws_organizations_resource_policy",
		"aws::osis::pipeline":                                              "aws_osis_pipeline",
		"aws::panorama::applicationinstance":                               "",
		"aws::panorama::package":                                           "",
		"aws::panorama::packageversion":                                    "",
		"aws::paymentcryptography::alias":                                  "aws_paymentcryptography_key_alias",
		"aws::paymentcryptography::key":                                    "aws_paymentcryptography_key",
		"aws::pcaconnectorad::connector":                                   "",
		"aws::pcaconnectorad::directoryregistration":                       "",
		"aws::pcaconnectorad::serviceprincipalname":                        "",
		"aws::pcaconnectorad::template":                                    "",
		"aws::pcaconnectorad::templategroupaccesscontrolentry":             "",
		"aws::personalize::dataset":                                        "",
		"aws::personalize::datasetgroup":                                   "",
		"aws::personalize::schema":                                         "",
		"aws::personalize::solution":                                       "",
		"aws::pinpoint::admchannel":                                        "aws_pinpoint_adm_channel",
		"aws::pinpoint::apnschannel":                                       "aws_pinpoint_apns_channel",
		"aws::pinpoint::apnssandboxchannel":                                "",
		"aws::pinpoint::apnsvoipchannel":                                   "aws_pinpoint_apns_voip_channel",
		"aws::pinpoint::apnsvoipsandboxchannel":                            "aws_pinpoint_apns_voip_sandbox_channel",
		"aws::pinpoint::app":                                               "aws_pinpoint_app",
		"aws::pinpoint::applicationsettings":                               "",
		"aws::pinpoint::baiduchannel":                                      "aws_pinpoint_baidu_channel",
		"aws::pinpoint::campaign":                                          "",
		"aws::pinpoint::emailchannel":                                      "aws_pinpoint_email_channel",
		"aws::pinpoint::emailtemplate":                                     "",
		"aws::pinpoint::eventstream":                                       "aws_pinpoint_event_stream",
		"aws::pinpoint::gcmchannel":                                        "aws_pinpoint_gcm_channel",
		"aws::pinpoint::inapptemplate":                                     "",
		"aws::pinpoint::pushtemplate":                                      "",
		"aws::pinpoint::segment":                                           "",
		"aws::pinpoint::smschannel":                                        "",
		"aws::pinpoint::smstemplate":                                       "aws_pinpoint_sms_channel",
		"aws::pinpoint::voicechannel":                                      "",
		"aws::pinpointemail::configurationset":                             "",
		"aws::pinpointemail::configurationseteventdestination":             "",
		"aws::pinpointemail::dedicatedippool":                              "",
		"aws::pinpointemail::identity":                                     "",
		"aws::pipes::pipe":                                                 "aws_pipes_pipe",
		"aws::proton::environmentaccountconnection":                        "",
		"aws::proton::environmenttemplate":                                 "",
		"aws::proton::servicetemplate":                                     "",
		"aws::qbusiness::application":                                      "",
		"aws::qbusiness::datasource":                                       "",
		"aws::qbusiness::index":                                            "",
		"aws::qbusiness::plugin":                                           "",
		"aws::qbusiness::retriever":                                        "",
		"aws::qbusiness::webexperience":                                    "",
		"aws::qldb::ledger":                                                "aws_qldb_ledger",
		"aws::qldb::stream":                                                "aws_qldb_stream",
		"aws::quicksight::analysis":                                        "aws_quicksight_analysis",
		"aws::quicksight::dashboard":                                       "aws_quicksight_dashboard",
		"aws::quicksight::dataset":                                         "aws_quicksight_data_set",
		"aws::quicksight::datasource":                                      "aws_quicksight_data_source",
		"aws::quicksight::refreshschedule":                                 "aws_quicksight_refresh_schedule",
		"aws::quicksight::template":                                        "aws_quicksight_template",
		"aws::quicksight::theme":                                           "aws_quicksight_theme",
		"aws::quicksight::topic":                                           "",
		"aws::quicksight::vpcconnection":                                   "",
		"aws::ram::permission":                                             "",
		"aws::ram::resourceshare":                                          "aws_ram_resource_share",
		"aws::rds::customdbengineversion":                                  "",
		"aws::rds::dbcluster":                                              "aws_rds_cluster",
		"aws::rds::dbclusterparametergroup":                                "aws_rds_cluster_parameter_group",
		"aws::rds::dbinstance":                                             "aws_db_instance",
		"aws::rds::dbparametergroup":                                       "aws_db_parameter_group",
		"aws::rds::dbproxy":                                                "aws_db_proxy",
		"aws::rds::dbproxyendpoint":                                        "aws_db_proxy_endpoint",
		"aws::rds::dbproxytargetgroup":                                     "aws_db_proxy_default_target_group",
		"aws::rds::dbsecuritygroup":                                        "",
		"aws::rds::dbsecuritygroupingress":                                 "",
		"aws::rds::dbsubnetgroup":                                          "aws_db_subnet_group",
		"aws::rds::eventsubscription":                                      "",
		"aws::rds::globalcluster":                                          "aws_rds_global_cluster",
		"aws::rds::integration":                                            "aws_rds_integration",
		"aws::rds::optiongroup":                                            "aws_db_option_group",
		"aws::redshift::cluster":                                           "aws_redshift_cluster",
		"aws::redshift::clusterparametergroup":                             "",
		"aws::redshift::clustersecuritygroup":                              "",
		"aws::redshift::clustersecuritygroupingress":                       "",
		"aws::redshift::clustersubnetgroup":                                "",
		"aws::redshift::endpointaccess":                                    "aws_redshift_endpoint_access",
		"aws::redshift::endpointauthorization":                             "aws_redshift_endpoint_authorization",
		"aws::redshift::eventsubscription":                                 "aws_redshift_event_subscription",
		"aws::redshift::scheduledaction":                                   "aws_redshift_scheduled_action",
		"aws::redshiftserverless::namespace":                               "aws_redshiftserverless_namespace",
		"aws::redshiftserverless::workgroup":                               "aws_redshiftserverless_workgroup",
		"aws::refactorspaces::application":                                 "",
		"aws::refactorspaces::environment":                                 "",
		"aws::refactorspaces::route":                                       "",
		"aws::refactorspaces::service":                                     "",
		"aws::rekognition::collection":                                     "aws_rekognition_collection",
		"aws::rekognition::project":                                        "aws_rekognition_project",
		"aws::rekognition::streamprocessor":                                "aws_rekognition_stream_processor",
		"aws::resiliencehub::app":                                          "",
		"aws::resiliencehub::resiliencypolicy":                             "",
		"aws::resourceexplorer2::defaultviewassociation":                   "",
		"aws::resourceexplorer2::index":                                    "aws_resourceexplorer2_index",
		"aws::resourceexplorer2::view":                                     "aws_resourceexplorer2_view",
		"aws::resourcegroups::group":                                       "aws_resourcegroups_group",
		"aws::robomaker::fleet":                                            "",
		"aws::robomaker::robot":                                            "",
		"aws::robomaker::robotapplication":                                 "",
		"aws::robomaker::robotapplicationversion":                          "",
		"aws::robomaker::simulationapplication":                            "",
		"aws::robomaker::simulationapplicationversion":                     "",
		"aws::rolesanywhere::crl":                                          "",
		"aws::rolesanywhere::profile":                                      "aws_rolesanywhere_profile",
		"aws::rolesanywhere::trustanchor":                                  "aws_rolesanywhere_trust_anchor",
		"aws::route53::cidrcollection":                                     "aws_route53_cidr_collection",
		"aws::route53::dnssec":                                             "aws_route53_hosted_zone_dnssec",
		"aws::route53::healthcheck":                                        "aws_route53_health_check",
		"aws::route53::hostedzone":                                         "aws_route53_zone",
		"aws::route53::keysigningkey":                                      "aws_route53_key_signing_key",
		"aws::route53::recordset":                                          "aws_route53_record",
		"aws::route53::recordsetgroup":                                     "",
		"aws::route53profiles::profile":                                    "",
		"aws::route53profiles::profileassociation":                         "",
		"aws::route53profiles::profileresourceassociation":                 "",
		"aws::route53recoverycontrol::cluster":                             "aws_route53recoverycontrolconfig_cluster",
		"aws::route53recoverycontrol::controlpanel":                        "aws_route53recoverycontrolconfig_control_panel",
		"aws::route53recoverycontrol::routingcontrol":                      "aws_route53recoverycontrolconfig_routing_control",
		"aws::route53recoverycontrol::safetyrule":                          "aws_route53recoverycontrolconfig_safety_rule",
		"aws::route53recoveryreadiness::cell":                              "aws_route53recoveryreadiness_cell",
		"aws::route53recoveryreadiness::readinesscheck":                    "aws_route53recoveryreadiness_readiness_check",
		"aws::route53recoveryreadiness::recoverygroup":                     "aws_route53recoveryreadiness_recovery_group",
		"aws::route53recoveryreadiness::resourceset":                       "aws_route53recoveryreadiness_resource_set",
		"aws::route53resolver::firewalldomainlist":                         "",
		"aws::route53resolver::firewallrulegroup":                          "",
		"aws::route53resolver::firewallrulegroupassociation":               "",
		"aws::route53resolver::outpostresolver":                            "",
		"aws::route53resolver::resolverconfig":                             "aws_route53_resolver_config",
		"aws::route53resolver::resolverdnssecconfig":                       "",
		"aws::route53resolver::resolverendpoint":                           "aws_route53_resolver_endpoint",
		"aws::route53resolver::resolverqueryloggingconfig":                 "aws_route53_resolver_query_log_config",
		"aws::route53resolver::resolverqueryloggingconfigassociation":      "aws_route53_resolver_query_log_config_association",
		"aws::route53resolver::resolverrule":                               "aws_route53_resolver_rule",
		"aws::route53resolver::resolverruleassociation":                    "aws_route53_resolver_rule_association",
		"aws::rum::appmonitor":                                             "aws_rum_app_monitor",
		"aws::s3::accessgrant":                                             "aws_s3control_access_grant",
		"aws::s3::accessgrantsinstance":                                    "aws_s3control_access_grants_instance",
		"aws::s3::accessgrantslocation":                                    "aws_s3control_access_grants_location",
		"aws::s3::accesspoint":                                             "aws_s3_access_point",
		"aws::s3::bucket":                                                  "aws_s3_bucket",
		"aws::s3::bucketpolicy":                                            "aws_s3_bucket_policy",
		"aws::s3::multiregionaccesspoint":                                  "aws_s3control_multi_region_access_point",
		"aws::s3::multiregionaccesspointpolicy":                            "aws_s3control_multi_region_access_point_policy",
		"aws::s3::storagelens":                                             "",
		"aws::s3::storagelensgroup":                                        "",
		"aws::s3express::bucketpolicy":                                     "",
		"aws::s3express::directorybucket":                                  "",
		"aws::s3objectlambda::accesspoint":                                 "",
		"aws::s3objectlambda::accesspointpolicy":                           "",
		"aws::s3outposts::accesspoint":                                     "",
		"aws::s3outposts::bucket":                                          "",
		"aws::s3outposts::bucketpolicy":                                    "",
		"aws::s3outposts::endpoint":                                        "aws_s3outposts_endpoint",
		"aws::sagemaker::app":                                              "aws_sagemaker_app",
		"aws::sagemaker::appimageconfig":                                   "aws_sagemaker_app_image_config",
		"aws::sagemaker::coderepository":                                   "aws_sagemaker_code_repository",
		"aws::sagemaker::dataqualityjobdefinition":                         "aws_sagemaker_data_quality_job_definition",
		"aws::sagemaker::device":                                           "aws_sagemaker_device",
		"aws::sagemaker::devicefleet":                                      "aws_sagemaker_device_fleet",
		"aws::sagemaker::domain":                                           "aws_sagemaker_domain",
		"aws::sagemaker::endpoint":                                         "aws_sagemaker_endpoint",
		"aws::sagemaker::endpointconfig":                                   "aws_sagemaker_endpoint_configuration",
		"aws::sagemaker::featuregroup":                                     "aws_sagemaker_feature_group",
		"aws::sagemaker::image":                                            "aws_sagemaker_image",
		"aws::sagemaker::imageversion":                                     "aws_sagemaker_image_version",
		"aws::sagemaker::inferencecomponent":                               "",
		"aws::sagemaker::inferenceexperiment":                              "",
		"aws::sagemaker::mlflowtrackingserver":                             "",
		"aws::sagemaker::model":                                            "aws_sagemaker_model",
		"aws::sagemaker::modelbiasjobdefinition":                           "",
		"aws::sagemaker::modelcard":                                        "",
		"aws::sagemaker::modelexplainabilityjobdefinition":                 "",
		"aws::sagemaker::modelpackage":                                     "",
		"aws::sagemaker::modelpackagegroup":                                "aws_sagemaker_model_package_group",
		"aws::sagemaker::modelqualityjobdefinition":                        "",
		"aws::sagemaker::monitoringschedule":                               "aws_sagemaker_monitoring_schedule",
		"aws::sagemaker::notebookinstance":                                 "aws_sagemaker_notebook_instance",
		"aws::sagemaker::notebookinstancelifecycleconfig":                  "aws_sagemaker_notebook_instance_lifecycle_configuration",
		"aws::sagemaker::pipeline":                                         "aws_sagemaker_pipeline",
		"aws::sagemaker::project":                                          "aws_sagemaker_project",
		"aws::sagemaker::space":                                            "",
		"aws::sagemaker::userprofile":                                      "aws_sagemaker_user_profile",
		"aws::sagemaker::workteam":                                         "aws_sagemaker_workteam",
		"aws::scheduler::schedule":                                         "aws_scheduler_schedule",
		"aws::scheduler::schedulegroup":                                    "aws_scheduler_schedule_group",
		"aws::sdb::domain":                                                 "aws_simpledb_domain",
		"aws::secretsmanager::resourcepolicy":                              "aws_secretsmanager_secret_policy",
		"aws::secretsmanager::rotationschedule":                            "aws_secretsmanager_secret_rotation",
		"aws::secretsmanager::secret":                                      "aws_secrets_manager_secret",
		"aws::secretsmanager::secrettargetattachment":                      "",
		"aws::securityhub::automationrule":                                 "aws_securityhub_automation_rule",
		"aws::securityhub::configurationpolicy":                            "aws_securityhub_configuration_policy",
		"aws::securityhub::delegatedadmin":                                 "",
		"aws::securityhub::findingaggregator":                              "aws_securityhub_finding_aggregator",
		"aws::securityhub::hub":                                            "",
		"aws::securityhub::insight":                                        "aws_securityhub_insight",
		"aws::securityhub::organizationconfiguration":                      "aws_securityhub_organization_configuration",
		"aws::securityhub::policyassociation":                              "",
		"aws::securityhub::productsubscription":                            "aws_securityhub_product_subscription",
		"aws::securityhub::securitycontrol":                                "",
		"aws::securityhub::standard":                                       "aws_securityhub_standards_control",
		"aws::securitylake::awslogsource":                                  "aws_securitylake_aws_log_source",
		"aws::securitylake::datalake":                                      "aws_securitylake_data_lake",
		"aws::securitylake::subscriber":                                    "aws_securitylake_subscriber",
		"aws::securitylake::subscribernotification":                        "aws_securitylake_subscriber_notification",
		"aws::servicecatalog::acceptedportfolioshare":                      "",
		"aws::servicecatalog::cloudformationproduct":                       "",
		"aws::servicecatalog::cloudformationprovisionedproduct":            "",
		"aws::servicecatalog::launchnotificationconstraint":                "",
		"aws::servicecatalog::launchroleconstraint":                        "",
		"aws::servicecatalog::launchtemplateconstraint":                    "",
		"aws::servicecatalog::portfolio":                                   "aws_service_catalog_portfolio",
		"aws::servicecatalog::portfolioprincipalassociation":               "",
		"aws::servicecatalog::portfolioproductassociation":                 "aws_service_catalog_product_portfolio_association",
		"aws::servicecatalog::portfolioshare":                              "aws_service_catalog_portfolio_share",
		"aws::servicecatalog::resourceupdateconstraint":                    "",
		"aws::servicecatalog::serviceaction":                               "aws_servicecatalog_service_action",
		"aws::servicecatalog::serviceactionassociation":                    "",
		"aws::servicecatalog::stacksetconstraint":                          "",
		"aws::servicecatalog::tagoption":                                   "aws_service_catalog_tag_option",
		"aws::servicecatalog::tagoptionassociation":                        "aws_service_catalog_tag_option_association",
		"aws::servicecatalogappregistry::application":                      "aws_servicecatalogappregistry_application",
		"aws::servicecatalogappregistry::attributegroup":                   "",
		"aws::servicecatalogappregistry::attributegroupassociation":        "",
		"aws::servicecatalogappregistry::resourceassociation":              "",
		"aws::servicediscovery::httpnamespace":                             "aws_service_discovery_http_namespace",
		"aws::servicediscovery::instance":                                  "aws_service_discovery_instance",
		"aws::servicediscovery::privatednsnamespace":                       "aws_service_discovery_private_dns_namespace",
		"aws::servicediscovery::publicdnsnamespace":                        "aws_service_discovery_public_dns_namespace",
		"aws::servicediscovery::service":                                   "aws_service_discovery_service",
		"aws::ses::configurationset":                                       "aws_ses_configuration_set",
		"aws::ses::configurationseteventdestination":                       "",
		"aws::ses::contactlist":                                            "",
		"aws::ses::dedicatedippool":                                        "",
		"aws::ses::emailidentity":                                          "",
		"aws::ses::mailmanageraddoninstance":                               "",
		"aws::ses::mailmanageraddonsubscription":                           "",
		"aws::ses::mailmanagerarchive":                                     "",
		"aws::ses::mailmanageringresspoint":                                "",
		"aws::ses::mailmanagerrelay":                                       "",
		"aws::ses::mailmanagerruleset":                                     "",
		"aws::ses::mailmanagertrafficpolicy":                               "",
		"aws::ses::receiptfilter":                                          "aws_ses_receipt_filter",
		"aws::ses::receiptrule":                                            "aws_ses_receipt_rule",
		"aws::ses::receiptruleset":                                         "",
		"aws::ses::template":                                               "aws_ses_template",
		"aws::ses::vdmattributes":                                          "",
		"aws::shield::drtaccess":                                           "",
		"aws::shield::proactiveengagement":                                 "aws_shield_proactive_engagement",
		"aws::shield::protection":                                          "aws_shield_protection",
		"aws::shield::protectiongroup":                                     "aws_shield_protection_group",
		"aws::signer::profilepermission":                                   "",
		"aws::signer::signingprofile":                                      "",
		"aws::simspaceweaver::simulation":                                  "",
		"aws::sns::subscription":                                           "aws_sns_subscription",
		"aws::sns::topic":                                                  "aws_sns_topic",
		"aws::sns::topicinlinepolicy":                                      "",
		"aws::sns::topicpolicy":                                            "aws_sns_topic_policy",
		"aws::sqs::queue":                                                  "aws_sqs_queue",
		"aws::sqs::queueinlinepolicy":                                      "",
		"aws::sqs::queuepolicy":                                            "aws_sqs_queue_policy",
		"aws::ssm::association":                                            "aws_ssm_association",
		"aws::ssm::document":                                               "aws_ssm_document",
		"aws::ssm::maintenancewindow":                                      "aws_ssm_maintenance_window",
		"aws::ssm::maintenancewindowtarget":                                "aws_ssm_maintenance_window_target",
		"aws::ssm::maintenancewindowtask":                                  "aws_ssm_maintenance_window_task",
		"aws::ssm::parameter":                                              "aws_ssm_parameter",
		"aws::ssm::patchbaseline":                                          "aws_ssm_patch_baseline",
		"aws::ssm::resourcedatasync":                                       "aws_ssm_resource_data_sync",
		"aws::ssm::resourcepolicy":                                         "",
		"aws::ssmcontacts::contact":                                        "aws_ssmcontacts_contact",
		"aws::ssmcontacts::contactchannel":                                 "aws_ssmcontacts_contact_channel",
		"aws::ssmcontacts::plan":                                           "aws_ssmcontacts_plan",
		"aws::ssmcontacts::rotation":                                       "aws_ssmcontacts_rotation",
		"aws::ssmincidents::replicationset":                                "aws_ssmincidents_replication_set",
		"aws::ssmincidents::responseplan":                                  "aws_ssmincidents_response_plan",
		"aws::sso::application":                                            "aws_ssoadmin_application",
		"aws::sso::applicationassignment":                                  "aws_ssoadmin_application_assignment",
		"aws::sso::assignment":                                             "",
		"aws::sso::instance":                                               "",
		"aws::sso::instanceaccesscontrolattributeconfiguration":            "",
		"aws::sso::permissionset":                                          "aws_ssoadmin_permission_set",
		"aws::stepfunctions::activity":                                     "aws_sfn_activity",
		"aws::stepfunctions::statemachine":                                 "aws_sfn_state_machine",
		"aws::stepfunctions::statemachinealias":                            "aws_sfn_alias",
		"aws::supportapp::accountalias":                                    "",
		"aws::supportapp::slackchannelconfiguration":                       "",
		"aws::supportapp::slackworkspaceconfiguration":                     "",
		"aws::synthetics::canary":                                          "aws_synthetics_canary",
		"aws::synthetics::group":                                           "aws_synthetics_group",
		"aws::systemsmanagersap::application":                              "",
		"aws::timestream::database":                                        "aws_timestreamwrite_database",
		"aws::timestream::influxdbinstance":                                "aws_timestreaminfluxdb_db_instance",
		"aws::timestream::scheduledquery":                                  "",
		"aws::timestream::table":                                           "aws_timestreamwrite_table",
		"aws::transfer::agreement":                                         "aws_transfer_agreement",
		"aws::transfer::certificate":                                       "aws_transfer_certificate",
		"aws::transfer::connector":                                         "aws_transfer_connector",
		"aws::transfer::profile":                                           "aws_transfer_profile",
		"aws::transfer::server":                                            "aws_transfer_server",
		"aws::transfer::user":                                              "aws_transfer_user",
		"aws::transfer::workflow":                                          "aws_transfer_workflow",
		"aws::verifiedpermissions::identitysource":                         "aws_verifiedpermissions_identity_source",
		"aws::verifiedpermissions::policy":                                 "aws_verifiedpermissions_policy",
		"aws::verifiedpermissions::policystore":                            "aws_verifiedpermissions_policy_store",
		"aws::verifiedpermissions::policytemplate":                         "aws_verifiedpermissions_policy_template",
		"aws::voiceid::domain":                                             "",
		"aws::vpclattice::accesslogsubscription":                           "aws_vpclattice_access_log_subscription",
		"aws::vpclattice::authpolicy":                                      "aws_vpclattice_auth_policy",
		"aws::vpclattice::listener":                                        "aws_vpclattice_listener",
		"aws::vpclattice::resourcepolicy":                                  "aws_vpclattice_resource_policy",
		"aws::vpclattice::rule":                                            "aws_vpclattice_listener_rule",
		"aws::vpclattice::service":                                         "aws_vpclattice_service",
		"aws::vpclattice::servicenetwork":                                  "aws_vpclattice_service_network",
		"aws::vpclattice::servicenetworkserviceassociation":                "aws_vpclattice_service_network_service_association",
		"aws::vpclattice::servicenetworkvpcassociation":                    "aws_vpclattice_service_network_vpc_association",
		"aws::vpclattice::targetgroup":                                     "aws_vpclattice_target_group",
		"aws::waf::bytematchset":                                           "aws_waf_byte_match_set",
		"aws::waf::ipset":                                                  "aws_waf_ipset",
		"aws::waf::rule":                                                   "aws_waf_rule",
		"aws::waf::sizeconstraintset":                                      "aws_waf_size_constraint_set",
		"aws::waf::sqlinjectionmatchset":                                   "aws_waf_sql_injection_match_set",
		"aws::waf::webacl":                                                 "aws_waf_web_acl",
		"aws::waf::xssmatchset":                                            "aws_waf_xss_match_set",
		"aws::wafregional::bytematchset":                                   "aws_wafregional_byte_match_set",
		"aws::wafregional::geomatchset":                                    "aws_wafregional_geo_match_set",
		"aws::wafregional::ipset":                                          "aws_wafregional_ipset",
		"aws::wafregional::ratebasedrule":                                  "aws_wafregional_rate_based_rule",
		"aws::wafregional::regexpatternset":                                "aws_wafregional_regex_match_set",
		"aws::wafregional::rule":                                           "aws_wafregional_rule",
		"aws::wafregional::sizeconstraintset":                              "aws_wafregional_size_constraint_set",
		"aws::wafregional::sqlinjectionmatchset":                           "aws_wafregional_sql_injection_match_set",
		"aws::wafregional::webacl":                                         "aws_wafregional_web_acl",
		"aws::wafregional::webaclassociation":                              "aws_wafregional_web_acl_association",
		"aws::wafregional::xssmatchset":                                    "aws_wafregional_xss_match_set",
		"aws::wafv2::ipset":                                                "aws_wafv2_ip_set",
		"aws::wafv2::loggingconfiguration":                                 "",
		"aws::wafv2::regexpatternset":                                      "aws_wafv2_regex_pattern_set",
		"aws::wafv2::rulegroup":                                            "aws_wafv2_rule_group",
		"aws::wafv2::webacl":                                               "aws_wafv2_web_acl",
		"aws::wafv2::webaclassociation":                                    "aws_wafv2_webacl_association",
		"aws::wisdom::assistant":                                           "",
		"aws::wisdom::assistantassociation":                                "",
		"aws::wisdom::knowledgebase":                                       "",
		"aws::workspaces::connectionalias":                                 "aws_workspaces_connection_alias",
		"aws::workspaces::workspace":                                       "aws_workspaces_workspace",
		"aws::workspaces::workspacespool":                                  "",
		"aws::workspacesthinclient::environment":                           "",
		"aws::workspacesweb::browsersettings":                              "",
		"aws::workspacesweb::identityprovider":                             "",
		"aws::workspacesweb::ipaccesssettings":                             "",
		"aws::workspacesweb::networksettings":                              "",
		"aws::workspacesweb::portal":                                       "",
		"aws::workspacesweb::truststore":                                   "",
		"aws::workspacesweb::useraccessloggingsettings":                    "",
		"aws::workspacesweb::usersettings":                                 "",
		"aws::xray::group":                                                 "aws_xray_group",
		"aws::xray::resourcepolicy":                                        "",
		"aws::xray::samplingrule":                                          "aws_xray_sampling_rule",
		// add more
		"microsoft.aad/domainservices":                                        "azurerm_active_directory_domain_service",
		"microsoft.analysisservices/servers":                                  "azurerm_analysis_services_server",
		"microsoft.apimanagement/service":                                     "azurerm_api_management",
		"microsoft.app/containerapps":                                         "azurerm_container_app",
		"microsoft.app/managedenvironments":                                   "azurerm_container_app_environment",
		"microsoft.authorization/roleassignments":                             "azurerm_role_assignment",
		"microsoft.authorization/roledefinitions":                             "azurerm_role_definition",
		"microsoft.cognitiveservices/accounts":                                "azurerm_cognitive_account",
		"microsoft.compute/availabilitysets":                                  "azurerm_availability_set",
		"microsoft.compute/disks":                                             "azurerm_managed_disk",
		"microsoft.compute/virtualmachines":                                   "azurerm_virtual_machine",
		"microsoft.compute/virtualmachines/extensions":                        "azurerm_virtual_machine_extension",
		"microsoft.compute/virtualmachinescalesets":                           "azurerm_linux_virtual_machine_scale_set",
		"microsoft.containerregistry/registries":                              "azurerm_container_registry",
		"microsoft.containerservice/managedclusters":                          "azurerm_kubernetes_cluster",
		"microsoft.documentdb/databaseaccounts":                               "azurerm_cosmosdb_account",
		"microsoft.insights/activitylogalerts":                                "azurerm_monitor_activity_log_alert",
		"microsoft.keyvault/vaults":                                           "azurerm_key_vault",
		"microsoft.managedidentity/userassignedidentities":                    "azurerm_user_assigned_identity",
		"microsoft.network/applicationgateways":                               "azurerm_application_gateway",
		"microsoft.network/applicationgateways/authenticationcertificates":    "azurerm_application_gateway",
		"microsoft.network/applicationgateways/backendaddresspools":           "azurerm_network_interface_application_gateway_backend_address_pool_association",
		"microsoft.network/applicationgateways/backendhttpsettingscollection": "azurerm_application_gateway",
		"microsoft.network/applicationgateways/frontendipconfigurations":      "azurerm_application_gateway",
		"microsoft.network/applicationgateways/frontendports":                 "azurerm_application_gateway",
		"microsoft.network/applicationgateways/httplisteners":                 "azurerm_application_gateway",
		"microsoft.network/applicationgateways/sslcertificates":               "azurerm_application_gateway",
		"microsoft.network/applicationgatewaywebapplicationfirewallpolicies":  "azurerm_web_application_firewall_policy",
		"microsoft.network/bastionhosts":                                      "azurerm_bastion_host",
		"microsoft.network/networkinterfaces":                                 "azurerm_network_interface",
		"microsoft.network/networksecuritygroups":                             "azurerm_network_security_group",
		"microsoft.network/networksecuritygroups/securityrules":               "azurerm_network_security_rule",
		"microsoft.network/privatednszones":                                   "azurerm_private_dns_zone",
		"microsoft.network/privateendpoints":                                  "azurerm_private_endpoint",
		"microsoft.network/privateendpoints/privatednszonegroups":             "azurerm_private_endpoint",
		"microsoft.network/publicipaddresses":                                 "azurerm_public_ip",
		"microsoft.network/virtualnetworks":                                   "azurerm_virtual_network",
		"microsoft.network/virtualnetworks/subnets":                           "azurerm_subnet",
		"microsoft.operationalinsights/workspaces":                            "azurerm_log_analytics_workspace",
		"microsoft.operationsmanagement/solutions":                            "azurerm_log_analytics_solution",
		"microsoft.resources/deployments":                                     "azurerm_template_deployment",
		"microsoft.servicebus/namespaces":                                     "azurerm_servicebus_namespace",
		"microsoft.servicebus/namespaces/authorizationRules":                  "azurerm_servicebus_namespace_authorization_rule",
		"microsoft.servicebus/namespaces/queues":                              "azurerm_servicebus_queue",
		"microsoft.storage/storageaccounts":                                   "azurerm_storage_account",
	}

	if reverse {
		Reversed := reverseMap(Lookup)
		result = Reversed[resource]
	} else {
		result = Lookup[strings.TrimSuffix(strings.ToLower(resource), "/")]
	}

	var err error

	if result == "" {
		return nil, &missingResourceError{
			Resource: resource,
		}
	}

	return &result, err
}

func reverseMap(m map[string]string) map[string]string {
	n := make(map[string]string, len(m))
	for k, v := range m {
		n[v] = k
	}

	return n
}
