resource "aws_iam_user" "{{.item}}" {
{{- if .resource.Groups}}
  groups = [{{range $i, $v := .resource.Groups}}{{if $i}}, {{end}}"{{.}}"{{end}}]
{{- end}}
  name = "{{.item}}"
{{- if .resource.LoginProfile}}
  password = "{{.resource.LoginProfile.Password}}"
  password_reset_required={{Boolean .resource.LoginProfile.PasswordResetRequired}}
{{- end}}
{{- if .resource.ManagedPolicyArns}}
  managed_policy_arns=[{{range $i, $v := .resource.ManagedPolicyArns}}{{if $i}}, {{end}}"{{.}}"{{end}}]
{{- end}}
{{- if .resource.Path}}
  path="{{.resource.Path}}"
{{- end}}
{{- if .resource.PermissionsBoundary}}
  permission_boundary="{{.resource.PermissionsBoundary}}"
{{- end}}
{{- if .resource.Tags}}
  tags = {
  {{Tags .resource.Tags}}
  }
{{- end}}
{{- if .resource.UserName}}
  username="{{.resource.UserName}}"
{{- end}}
}

{{- if .resource.Policies}}
{{- $p := .item}}
{{- $q := RandomString 6}}{{range $i, $a := .resource.Policies}}
{{if $a.PolicyName}}
resource "aws_iam_user_policy" "{{ $a.PolicyName}}{{$q}}" {
  name   = "{{ $a.PolicyName}}{{$q}}"
  role   = aws_iam_role.{{ $p}}.id
  policy = jsonencode({{ Marshal $a.PolicyDocument}})
}
{{- end}}
{{- end}}
{{- end}}
