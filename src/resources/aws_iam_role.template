resource "aws_iam_role" "{{.item}}" {
  {{- if .resource.Description}}
  description="{{.resource.Description}}"
  {{- end}}
  force_detach_policies=false
  inline_policy {}
  {{- if .resource.ManagedPolicyArns}}
  managed_policy_arns=[{{range $i, $v := .resource.ManagedPolicyArns}}{{if $i}}, {{end}}"{{.}}"{{end}}]
  {{- end}}
  {{- if .resource.MaxSessionDuration}}
  max_session_duration="{{.resource.MaxSessionDuration}}"
  {{- end}}
  {{- if .resource.PermissionsBoundary}}
  permissions_boundary="{{.resource.PermissionsBoundary}}"
  {{- end}}
  {{- if .resource.RoleName}}
  name="{{.resource.RoleName}}"
  {{- end}}
{{- if .resource.Path}}
  path="{{.resource.Path}}"
{{- end}}
  assume_role_policy = jsonencode({{ Marshal .resource.AssumeRolePolicyDocument}})
{{- if .resource.Tags}}
  tags = {
    {{Tags .resource.Tags}}
  }
{{- end}}
}


{{- if .resource.Policies}}
{{- $p := .item}}
{{- $q := RandomString 6}}{{range $i, $a := .resource.Policies}}
resource "aws_iam_role_policy" "{{ $a.PolicyName}}{{$q}}" {
  name="{{ $a.PolicyName}}{{$q}}"
  role=aws_iam_role.{{ $p}}.id
  policy = jsonencode({{ Marshal $a.PolicyDocument}})
}
{{end}}
{{end}}
