resource "aws_autoscaling_group" "{{.item}}" {
{{- if .resource.MaxSize }}
  max_size = {{ .resource.MaxSize }}
{{- end}}
{{- if.resource.MinSize}}
  min_size = {{ .resource.MinSize}}
{{- end}}
{{- if .resource.AutoScalingGroupName}}
  name= "{{.resource.AutoScalingGroupName}}"
{{- else}}
  name="{{.item}}"
{{- end}}
{{- if  .resource.AvailabilityZones}}
  availability_zones  = [{{range $i, $v := .resource.AvailabilityZones}}{{if $i}}, {{end}}"{{.}}"{{end}}]
{{- end}}
  capacity_rebalance= {{ Boolean .resource.CapacityRebalance }}
{{- if .resource.Context}}
  context= "{{.resource.Context}}"
{{- end}}
{{- if .resource.Cooldown }}
  default_cooldown={{.resource.Cooldown }}
{{- end}}
{{- if .resource.DefaultInstanceWarmup}}
  default_instance_warmup = {{.resource.DefaultInstanceWarmup}}
{{- end}}
{{- if .resource.DesiredCapacity}}
  desired_capacity = {{.resource.DesiredCapacity}}
{{- end }}
{{- if .resource.HealthCheckGracePeriod}}
  health_check_grace_period= {{.resource.HealthCheckGracePeriod}}
{{- else}}
  health_check_grace_period=300
{{- end}}
  health_check_type      = {{Nil .resource.HealthCheckType|Quote}}
  launch_configuration   = {{Nil .resource.LaunchConfigurationName|Quote}}
{{- if .resource.LaunchTemplate}}
  launch_template     {
{{- if  .resource.LaunchTemplate.LaunchTemplateId}}
    id     = {{ .resource.LaunchTemplate.LaunchTemplateId}}
{{- else    }}
    name   = {{Nil  .resource.LaunchTemplate.LaunchTemplateName|Quote}}
{{- end}}
    version= {{Nil .resource.LaunchTemplate.Version|Quote }}
  }
{{- end}}
{{- if .resource.LifecycleHookSpecificationList}}
  initial_lifecycle_hook {
   {{ .resource.LifecycleHookSpecificationList}}
  }
{{- end}}
  load_balancers         = {{ .resource.LoadBalancerNames}}
{{- if .resource.MaxInstanceLifetime}}
  max_instance_lifetime  = {{.resource.MaxInstanceLifetime}}
{{- end}}
  enabled_metrics        = {{ .resource.MetricsCollection}}
{{- if .resource.MixedInstancesPolicy}}
  mixed_instances_policy = {{.resource.MixedInstancesPolicy}}
{{- end}}
  protect_from_scale_in  = {{ Boolean .resource.NewInstancesProtectedFromScaleIn}}
{{- if   .resource.PlacementGroup}}
  placement_group={{Nil .resource.PlacementGroup|Quote}}
{{- end}}
{{- if .resource.ServiceLinkedRoleARN }}
  service_linked_role_arn={{.resource.ServiceLinkedRoleARN }}
{{- end}}
{{- if .resource.Tags}}
  tag = {
  {{- range $a, $i:= .resource.Tags}}
    key="{{$i.Key}}"
    propagate_at_launch={{$i.PropagateAtLaunch}}
    value="{{$i.Value}}"
  {{- end}}
    }
{{- end}}
  target_group_arns={{.resource.TargetGroupARNs}}
  termination_policies={{.resource.TerminationPolicies}}
{{- if .resource.VPCZoneIdentifier}}
  vpc_zone_identifier={{.resource.VPCZoneIdentifier}}
{{- end}}
}
