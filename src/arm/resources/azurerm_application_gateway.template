resource "azurerm_application_gateway" "{{.item}}" {
{{- if .resource.location}}
  location                 = {{ .resource.location|Quote }}
{{- else}}
  location                 = data.azurerm_resource_group.sato.location
{{- end }}
  name                     = {{ .resource.name|Quote }}
{{- if .resource.resourceGroupName }}
  resource_group_name      = {{ .resource.resourceGroupName|Quote }}
{{- else }}
  resource_group_name      = data.azurerm_resource_group.sato.name
{{- end}}
{{- if .resource.properties.sku}}
  sku {
    name     =  {{.resource.properties.sku.name|Quote}}
    tier     =  {{.resource.properties.sku.tier|Quote}}
    capacity =  {{.resource.properties.sku.capacity}}
  }
{{- end}}
{{- if .resource.properties.gatewayIPConfigurations}}
{{range $a, $b:= .resource.properties.gatewayIPConfigurations}}
  gateway_ip_configuration {
    name      = {{$b.name|Quote}}
    subnet_id = {{$b.properties.subnet.id|Quote}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.frontendPorts}}
{{range $c, $d:= .resource.properties.frontendPorts}}
  frontend_port {
    name = {{$d.name|Quote}}
    port = {{$d.properties.Port}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.frontendIPConfigurations}}
{{range $e, $f:= .resource.properties.frontendIPConfigurations}}
  frontend_ip_configuration {
    name                 = {{$f.name|Quote}}
    public_ip_address_id = {{$f.properties.PublicIPAddress.id|Quote}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.backendAddressPools}}
{{range $g, $h:= .resource.properties.backendAddressPools}}
  backend_address_pool {
    name = {{$h.name|Quote}}
{{- if $h.properties.BackendAddresses}}
    ip_addresses=[{{ range $a,$b:= $h.properties.BackendAddresses}}{{$b.IpAddress}},{{- end}}]
{{- end}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.backendHttpSettingsCollection}}
{{range $x,$y:= .resource.properties.backendHttpSettingsCollection}}
  backend_http_settings {
    name                  = {{$y.name|Quote}}
    cookie_based_affinity  = {{$y.properties.CookieBasedAffinity|Quote}}
{{- if $y.properties.Path}}
    path                  = {{$y.properties.Path|Quote}}
{{- end}}
    port                  = {{$y.properties.Port}}
    protocol              = {{$y.properties.Protocol}}
{{- if  $y.properties.RequestTimeout}}
    request_timeout       = {{$y.properties.RequestTimeout}}
{{- end}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.httpListeners}}
{{range $x,$y:= .resource.properties.httpListeners}}
  http_listener {
    name                           = {{$y.name|Quote}}
    frontend_ip_configuration_name  = {{$y.properties.FrontendIPConfiguration.Id|Quote}}
    frontend_port_name             = {{$y.properties.FrontendPort.Id|Quote}}
    protocol                       = {{$y.properties.Protocol|Quote}}
  }
{{- end}}
{{- end}}
{{- if .resource.properties.requestRoutingRules}}
{{range $x,$y:= .resource.properties.requestRoutingRules}}
  request_routing_rule {
    name                       = {{$y.Name|Quote}}
    rule_type                  = {{$y.properties.RuleType|Quote}}
    http_listener_name         = {{$y.properties.httpListener.id|Quote}}
    backend_address_pool_name  = {{$y.properties.backendAddressPool.id|Quote}}
    backend_http_settings_name = {{$y.properties.backendHttpSettings.id|Quote}}
  }
{{- end}}
{{- end}}
{{- if .resource.tags}}
  tags = {{Tags .resource.tags}}
{{- end}}
{{- if .resource.dependsOn }}
  depends_on = [{{- range $x, $j:= .resource.dependsOn }} {{$j}}, {{- end}}]
{{- end}}
}
